{
	"info": {
		"_postman_id": "1dcd0bd6-016a-4730-9fb1-e66b0ffd00fe",
		"name": "BPM",
		"description": "Api endpoints.<br>Branch: <b>feature/BPM-15693-mobbiz-ql-smart-filters\n</b><br>Commit: <b>d86ae6a9345e53fbe67ac709720e17e98816ddae\n</b><br>Node: <b>22.11.0</b><br>Instance ID: <b>0</b>.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1918745"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "{company}",
					"item": [
						{
							"name": "login",
							"item": [
								{
									"name": "anonymous",
									"item": [
										{
											"name": "Login as anonymous",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/login/anonymous",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"login",
														"anonymous"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/login/anonymous",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"login",
																"anonymous"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"Token\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "redirect",
									"item": [
										{
											"name": "Company Auth Controller company Login Redirect",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/:company/login/redirect?service=decathlon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"login",
														"redirect"
													],
													"query": [
														{
															"key": "service",
															"value": "decathlon",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/login/redirect?service=decathlon",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"login",
																"redirect"
															],
															"query": [
																{
																	"key": "service",
																	"value": "decathlon",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "getUrl",
									"item": [
										{
											"name": "Company Auth Controller company Login",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"service\": \"decathlon\",\n  \"input\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/login/getUrl",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"login",
														"getUrl"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"service\": \"decathlon\",\n  \"input\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/login/getUrl",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"login",
																"getUrl"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"authUrl\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "validate",
									"item": [
										{
											"name": "Company Auth Controller company Login Validate",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"service\": \"<string>\",\n  \"input\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/login/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"login",
														"validate"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"service\": \"<string>\",\n  \"input\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/login/validate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"login",
																"validate"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"token\": \"<uuid>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "config",
									"item": [
										{
											"name": "Company Auth Controller company Auth Get Config",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/login/config?service=decathlon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"login",
														"config"
													],
													"query": [
														{
															"key": "service",
															"value": "decathlon",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/login/config?service=decathlon",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"login",
																"config"
															],
															"query": [
																{
																	"key": "service",
																	"value": "decathlon",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"service\": \"decathlon\",\n    \"config\": {}\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Company Auth Controller company Auth Set Config",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"service\": \"decathlon\",\n  \"config\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/login/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"login",
														"config"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"service\": \"decathlon\",\n  \"config\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/login/config",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"login",
																"config"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"service\": \"decathlon\",\n    \"config\": {}\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "documents",
							"item": [
								{
									"name": "actions",
									"item": [
										{
											"name": "search",
											"item": [
												{
													"name": "Lists all available actions for document (with search in body)",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"search\": {\n    \"source\": \"pendingTasks\",\n    \"globalSearch\": \"<string>\",\n    \"filters\": {\n      \"cupidatat7d\": {},\n      \"dolore_4e6\": {},\n      \"veniam_37\": {}\n    },\n    \"sort\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/actions/search?formId=<uuid>&documentId=<uuid>&documentIds=<uuid>&documentIds=<uuid>&statusId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"actions",
																"search"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>"
																},
																{
																	"key": "documentIds",
																	"value": "<uuid>"
																},
																{
																	"key": "documentIds",
																	"value": "<uuid>"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"search\": {\n    \"source\": \"pendingTasks\",\n    \"globalSearch\": \"<string>\",\n    \"filters\": {\n      \"cupidatat7d\": {},\n      \"dolore_4e6\": {},\n      \"veniam_37\": {}\n    },\n    \"sort\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/actions/search?formId=<uuid>&documentId=<uuid>&documentIds=<uuid>&statusId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"actions",
																		"search"
																	],
																	"query": [
																		{
																			"key": "formId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "documentIds",
																			"value": "<uuid>"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{actionId}",
											"item": [
												{
													"name": "inputFields",
													"item": [
														{
															"name": "Returns additional input fields that has to be filled in order to perform action",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fields\": {\n    \"fugiatcf\": {}\n  },\n  \"inputs\": {\n    \"additionalProperties\": {\n      \"search\": \"<string>\",\n      \"page\": {\n        \"offset\": \"<number>\",\n        \"limit\": \"<number>\"\n      },\n      \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/actions/:actionId/inputFields?preloadItemsCount=<number>&statusId=<uuid>&documentId=<uuid>&formId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"actions",
																		":actionId",
																		"inputFields"
																	],
																	"query": [
																		{
																			"key": "preloadItemsCount",
																			"value": "<number>",
																			"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "If not specified, draft status considered"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "If not specified, new document considered"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "actionId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"fields\": {\n    \"fugiatcf\": {}\n  },\n  \"inputs\": {\n    \"additionalProperties\": {\n      \"search\": \"<string>\",\n      \"page\": {\n        \"offset\": \"<number>\",\n        \"limit\": \"<number>\"\n      },\n      \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/actions/:actionId/inputFields?preloadItemsCount=<number>&statusId=<uuid>&documentId=<uuid>&formId=<uuid>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				"actions",
																				":actionId",
																				"inputFields"
																			],
																			"query": [
																				{
																					"key": "preloadItemsCount",
																					"value": "<number>",
																					"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																				},
																				{
																					"key": "statusId",
																					"value": "<uuid>",
																					"description": "If not specified, draft status considered"
																				},
																				{
																					"key": "documentId",
																					"value": "<uuid>",
																					"description": "If not specified, new document considered"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "actionId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "undo",
													"item": [
														{
															"name": "Undo action",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/actions/:actionId/undo?documentId=<uuid>&load=owner&load=creator&formId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"actions",
																		":actionId",
																		"undo"
																	],
																	"query": [
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "load",
																			"value": "owner",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "creator",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "actionId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/actions/:actionId/undo?documentId=<uuid>&load=creator&formId=<uuid>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				"actions",
																				":actionId",
																				"undo"
																			],
																			"query": [
																				{
																					"key": "documentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				},
																				{
																					"key": "load",
																					"value": "creator",
																					"description": "Specify additional properties to load"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "actionId"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "batch",
											"item": [
												{
													"name": "undo",
													"item": [
														{
															"name": "Undo action on few documents",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"search\": {\n    \"source\": \"pendingTasks\",\n    \"globalSearch\": \"<string>\",\n    \"filters\": {\n      \"cupidatat7d\": {},\n      \"dolore_4e6\": {},\n      \"veniam_37\": {}\n    },\n    \"sort\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/actions/batch/undo?formId=<uuid>&documentIds=<uuid>&documentIds=<uuid>&actionId=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"actions",
																		"batch",
																		"undo"
																	],
																	"query": [
																		{
																			"key": "formId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "documentIds",
																			"value": "<uuid>"
																		},
																		{
																			"key": "documentIds",
																			"value": "<uuid>"
																		},
																		{
																			"key": "actionId",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"search\": {\n    \"source\": \"pendingTasks\",\n    \"globalSearch\": \"<string>\",\n    \"filters\": {\n      \"cupidatat7d\": {},\n      \"dolore_4e6\": {},\n      \"veniam_37\": {}\n    },\n    \"sort\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/actions/batch/undo?formId=<uuid>&documentIds=<uuid>&actionId=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				"actions",
																				"batch",
																				"undo"
																			],
																			"query": [
																				{
																					"key": "formId",
																					"value": "<uuid>"
																				},
																				{
																					"key": "documentIds",
																					"value": "<uuid>"
																				},
																				{
																					"key": "actionId",
																					"value": "<string>",
																					"description": "(Required) "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Performs same action on few documents",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"search\": {\n    \"source\": \"report\",\n    \"globalSearch\": \"<string>\",\n    \"filters\": {\n      \"dolore49\": {}\n    },\n    \"sort\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"input\": {\n    \"in2_0\": {},\n    \"consectetur5\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/actions/batch?formId=<uuid>&documentIds=<uuid>&documentIds=<uuid>&actionId=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"actions",
																"batch"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>"
																},
																{
																	"key": "documentIds",
																	"value": "<uuid>"
																},
																{
																	"key": "documentIds",
																	"value": "<uuid>"
																},
																{
																	"key": "actionId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true - forces autopopulated fields to refresh their values or apply other fixed to broken docs"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"search\": {\n    \"source\": \"report\",\n    \"globalSearch\": \"<string>\",\n    \"filters\": {\n      \"dolore49\": {}\n    },\n    \"sort\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"input\": {\n    \"in2_0\": {},\n    \"consectetur5\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/actions/batch?formId=<uuid>&documentIds=<uuid>&actionId=<string>&force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"actions",
																		"batch"
																	],
																	"query": [
																		{
																			"key": "formId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "documentIds",
																			"value": "<uuid>"
																		},
																		{
																			"key": "actionId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true - forces autopopulated fields to refresh their values or apply other fixed to broken docs"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "save",
											"item": [
												{
													"name": "Performs save action",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"input\": {\n    \"commodo8ab\": {},\n    \"occaecat_4ec\": {}\n  },\n  \"document\": {\n    \"id\": \"<uuid>\",\n    \"fields\": {\n      \"quis_\": {}\n    },\n    \"meta\": {\n      \"sit_e6\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/actions/save?formId=<uuid>&documentId=<uuid>&statusId=<uuid>&editSessionId=<uuid>&load=owner&load=creator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"actions",
																"save"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "If documentId specified, formId is optional"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "If not specified, new document considered"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "If not specified, draft status considered"
																},
																{
																	"key": "editSessionId",
																	"value": "<uuid>",
																	"description": "EditSessionId in case there is some resources to commit during action"
																},
																{
																	"key": "load",
																	"value": "owner",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"input\": {\n    \"commodo8ab\": {},\n    \"occaecat_4ec\": {}\n  },\n  \"document\": {\n    \"id\": \"<uuid>\",\n    \"fields\": {\n      \"quis_\": {}\n    },\n    \"meta\": {\n      \"sit_e6\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/actions/save?formId=<uuid>&documentId=<uuid>&statusId=<uuid>&editSessionId=<uuid>&load=creator",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"actions",
																		"save"
																	],
																	"query": [
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "If documentId specified, formId is optional"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "If not specified, new document considered"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "If not specified, draft status considered"
																		},
																		{
																			"key": "editSessionId",
																			"value": "<uuid>",
																			"description": "EditSessionId in case there is some resources to commit during action"
																		},
																		{
																			"key": "load",
																			"value": "creator",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\",\n    \"statusId\": \"<uuid>\",\n    \"formId\": \"<uuid>\",\n    \"form\": {\n      \"id\": \"<uuid>\",\n      \"abbr\": \"<string>\",\n      \"seq\": \"<number>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"cover\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"icon\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"initial\": \"<boolean>\",\n      \"final\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedBy\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"fields\": {\n      \"fugiat_2b7\": {},\n      \"dolor6\": {}\n    },\n    \"meta\": {\n      \"idf\": {}\n    },\n    \"fieldsValid\": \"<boolean>\",\n    \"attachment\": {},\n    \"comment\": [\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      }\n    ],\n    \"history\": [\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"sla-changed\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"action\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"automation\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      }\n    ],\n    \"followers\": [\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      }\n    ],\n    \"owner\": {\n      \"users\": [\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"statusName\": \"<string>\",\n    \"slaStatus\": \"off\",\n    \"slaDue\": \"<dateTime>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"accessType\": \"none\",\n    \"ownerType\": \"group\",\n    \"completed\": {},\n    \"lastStatusChange\": {},\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"archived\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Lists all available actions for document",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/actions?formId=<uuid>&documentId=<uuid>&documentIds=<uuid>&documentIds=<uuid>&statusId=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"actions"
													],
													"query": [
														{
															"key": "formId",
															"value": "<uuid>"
														},
														{
															"key": "documentId",
															"value": "<uuid>"
														},
														{
															"key": "documentIds",
															"value": "<uuid>"
														},
														{
															"key": "documentIds",
															"value": "<uuid>"
														},
														{
															"key": "statusId",
															"value": "<uuid>"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/actions?formId=<uuid>&documentId=<uuid>&documentIds=<uuid>&statusId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"actions"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>"
																},
																{
																	"key": "documentIds",
																	"value": "<uuid>"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										},
										{
											"name": "Performs action",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"input\": {\n    \"commodo8ab\": {},\n    \"occaecat_4ec\": {}\n  },\n  \"document\": {\n    \"id\": \"<uuid>\",\n    \"fields\": {\n      \"quis_\": {}\n    },\n    \"meta\": {\n      \"sit_e6\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/actions?formId=<uuid>&documentId=<uuid>&statusId=<uuid>&editSessionId=<uuid>&actionId=<uuid>&load=owner&load=creator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"actions"
													],
													"query": [
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "If documentId specified, formId is optional"
														},
														{
															"key": "documentId",
															"value": "<uuid>",
															"description": "If not specified, new document considered"
														},
														{
															"key": "statusId",
															"value": "<uuid>",
															"description": "If not specified, draft status considered"
														},
														{
															"key": "editSessionId",
															"value": "<uuid>",
															"description": "EditSessionId in case there is some resources to commit during action"
														},
														{
															"key": "actionId",
															"value": "<uuid>",
															"description": "(Required) Action to perform"
														},
														{
															"key": "load",
															"value": "owner",
															"description": "Specify additional properties to load"
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"input\": {\n    \"commodo8ab\": {},\n    \"occaecat_4ec\": {}\n  },\n  \"document\": {\n    \"id\": \"<uuid>\",\n    \"fields\": {\n      \"quis_\": {}\n    },\n    \"meta\": {\n      \"sit_e6\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/actions?formId=<uuid>&documentId=<uuid>&statusId=<uuid>&editSessionId=<uuid>&actionId=<uuid>&load=creator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"actions"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "If documentId specified, formId is optional"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "If not specified, new document considered"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "If not specified, draft status considered"
																},
																{
																	"key": "editSessionId",
																	"value": "<uuid>",
																	"description": "EditSessionId in case there is some resources to commit during action"
																},
																{
																	"key": "actionId",
																	"value": "<uuid>",
																	"description": "(Required) Action to perform"
																},
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\",\n    \"statusId\": \"<uuid>\",\n    \"formId\": \"<uuid>\",\n    \"form\": {\n      \"id\": \"<uuid>\",\n      \"abbr\": \"<string>\",\n      \"seq\": \"<number>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"cover\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"icon\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"initial\": \"<boolean>\",\n      \"final\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedBy\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"fields\": {\n      \"fugiat_2b7\": {},\n      \"dolor6\": {}\n    },\n    \"meta\": {\n      \"idf\": {}\n    },\n    \"fieldsValid\": \"<boolean>\",\n    \"attachment\": {},\n    \"comment\": [\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      }\n    ],\n    \"history\": [\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"sla-changed\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"action\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"automation\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      }\n    ],\n    \"followers\": [\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      }\n    ],\n    \"owner\": {\n      \"users\": [\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"statusName\": \"<string>\",\n    \"slaStatus\": \"off\",\n    \"slaDue\": \"<dateTime>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"accessType\": \"none\",\n    \"ownerType\": \"group\",\n    \"completed\": {},\n    \"lastStatusChange\": {},\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"archived\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "forms",
									"item": [
										{
											"name": "Lists all available forms where user can create documents",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/forms?case=create&name=<string>&offset=<number>&limit=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"forms"
													],
													"query": [
														{
															"key": "case",
															"value": "create",
															"description": "(Required) Returns list of forms where user have read access (when case = list) or creator access (when case = create)"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "name or abbr contain"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/forms?case=create&name=<string>&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"forms"
															],
															"query": [
																{
																	"key": "case",
																	"value": "create",
																	"description": "(Required) Returns list of forms where user have read access (when case = list) or creator access (when case = create)"
																},
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "name or abbr contain"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "formsAndApps",
									"item": [
										{
											"name": "Finds all Forms and Apps where user has any access (read or write)",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/formsAndApps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"formsAndApps"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/formsAndApps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"formsAndApps"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"apps\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"description\": \"<string>\",\n        \"forms\": [\n          {\n            \"id\": \"<uuid>\",\n            \"abbr\": \"<string>\",\n            \"seq\": \"<number>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cover\": {\n              \"id\": \"<string>\",\n              \"type\": \"<string>\",\n              \"size\": \"<number>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"enabled\": \"<boolean>\",\n            \"icon\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"abbr\": \"<string>\",\n            \"seq\": \"<number>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cover\": {\n              \"id\": \"<string>\",\n              \"type\": \"<string>\",\n              \"size\": \"<number>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"enabled\": \"<boolean>\",\n            \"icon\": \"<string>\"\n          }\n        ],\n        \"formCount\": \"<number>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"description\": \"<string>\",\n        \"forms\": [\n          {\n            \"id\": \"<uuid>\",\n            \"abbr\": \"<string>\",\n            \"seq\": \"<number>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cover\": {\n              \"id\": \"<string>\",\n              \"type\": \"<string>\",\n              \"size\": \"<number>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"enabled\": \"<boolean>\",\n            \"icon\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"abbr\": \"<string>\",\n            \"seq\": \"<number>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cover\": {\n              \"id\": \"<string>\",\n              \"type\": \"<string>\",\n              \"size\": \"<number>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"enabled\": \"<boolean>\",\n            \"icon\": \"<string>\"\n          }\n        ],\n        \"formCount\": \"<number>\",\n        \"color\": \"<string>\"\n      }\n    ],\n    \"individualForms\": [\n      {\n        \"id\": \"<uuid>\",\n        \"abbr\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"cover\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"size\": \"<number>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"enabled\": \"<boolean>\",\n        \"icon\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"abbr\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"cover\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"size\": \"<number>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"enabled\": \"<boolean>\",\n        \"icon\": \"<string>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "users",
									"item": [
										{
											"name": "Finds all users who can have access to the document",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/users?documentId=<uuid>&search=<string>&offset=<number>&limit=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"users"
													],
													"query": [
														{
															"key": "documentId",
															"value": "<uuid>",
															"description": "(Required) "
														},
														{
															"key": "search",
															"value": "<string>"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/users?documentId=<uuid>&search=<string>&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"users"
															],
															"query": [
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																},
																{
																	"key": "search",
																	"value": "<string>"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Finds all documents for form (filtering by fields)",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/search?globalSearch=<string>&sort=<string>&sort=<string>&component=tasks&exportTableIds=<uuid>&exportTableIds=<uuid>&load=owner&load=creator&offset=<number>&limit=<number>&skipTotalCount=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"search"
													],
													"query": [
														{
															"key": "globalSearch",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "component",
															"value": "tasks"
														},
														{
															"key": "exportTableIds",
															"value": "<uuid>",
															"description": "Embedded Table ids to be included to exported data with structure like joined table"
														},
														{
															"key": "exportTableIds",
															"value": "<uuid>",
															"description": "Embedded Table ids to be included to exported data with structure like joined table"
														},
														{
															"key": "load",
															"value": "owner",
															"description": "Specify additional properties to load"
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														},
														{
															"key": "skipTotalCount",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/search?globalSearch=<string>&sort=<string>&component=tasks&exportTableIds=<uuid>&load=creator&offset=<number>&limit=<number>&skipTotalCount=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"search"
															],
															"query": [
																{
																	"key": "globalSearch",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
																},
																{
																	"key": "component",
																	"value": "tasks"
																},
																{
																	"key": "exportTableIds",
																	"value": "<uuid>",
																	"description": "Embedded Table ids to be included to exported data with structure like joined table"
																},
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																},
																{
																	"key": "skipTotalCount",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tasks",
									"item": [
										{
											"name": "Find \"tasks\" documents for user",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/tasks?globalSearch=<string>&sort=<string>&sort=<string>&component=tasks&exportTableIds=<uuid>&exportTableIds=<uuid>&load=owner&load=creator&offset=<number>&limit=<number>&case=pendingTasks&skipTotalCount=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"tasks"
													],
													"query": [
														{
															"key": "globalSearch",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "component",
															"value": "tasks"
														},
														{
															"key": "exportTableIds",
															"value": "<uuid>",
															"description": "Embedded Table ids to be included to exported data with structure like joined table"
														},
														{
															"key": "exportTableIds",
															"value": "<uuid>",
															"description": "Embedded Table ids to be included to exported data with structure like joined table"
														},
														{
															"key": "load",
															"value": "owner",
															"description": "Specify additional properties to load"
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														},
														{
															"key": "case",
															"value": "pendingTasks",
															"description": "Specify screen where this document list would be used"
														},
														{
															"key": "skipTotalCount",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/tasks?globalSearch=<string>&sort=<string>&component=tasks&exportTableIds=<uuid>&load=creator&offset=<number>&limit=<number>&case=pendingTasks&skipTotalCount=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"tasks"
															],
															"query": [
																{
																	"key": "globalSearch",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
																},
																{
																	"key": "component",
																	"value": "tasks"
																},
																{
																	"key": "exportTableIds",
																	"value": "<uuid>",
																	"description": "Embedded Table ids to be included to exported data with structure like joined table"
																},
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																},
																{
																	"key": "case",
																	"value": "pendingTasks",
																	"description": "Specify screen where this document list would be used"
																},
																{
																	"key": "skipTotalCount",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "inputForm",
									"item": [
										{
											"name": "Get all information needed to show form",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/inputForm?formId=<uuid>&urn=<string>&documentId=<uuid>&statusId=<uuid>&preloadItemsCount=<number>&includeDebugName=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"inputForm"
													],
													"query": [
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "Skipped when document param specified."
														},
														{
															"key": "urn",
															"value": "<string>",
															"description": "Alternative for documentId"
														},
														{
															"key": "documentId",
															"value": "<uuid>",
															"description": "Must be specified when requested for existing document. That way initial enum items would take into account smart filters correctly"
														},
														{
															"key": "statusId",
															"value": "<uuid>",
															"description": "If not specified, initial status or document status will be used. Skipped when document param specified."
														},
														{
															"key": "preloadItemsCount",
															"value": "<number>",
															"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
														},
														{
															"key": "includeDebugName",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/inputForm?formId=<uuid>&urn=<string>&documentId=<uuid>&statusId=<uuid>&preloadItemsCount=<number>&includeDebugName=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"inputForm"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "Skipped when document param specified."
																},
																{
																	"key": "urn",
																	"value": "<string>",
																	"description": "Alternative for documentId"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "Must be specified when requested for existing document. That way initial enum items would take into account smart filters correctly"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "If not specified, initial status or document status will be used. Skipped when document param specified."
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>",
																	"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																},
																{
																	"key": "includeDebugName",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"form\": {\n      \"id\": \"<uuid>\",\n      \"abbr\": \"<string>\",\n      \"seq\": \"<number>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"cover\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"icon\": \"<string>\"\n    },\n    \"fields\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"array\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"readonly\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"array\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"required\",\n        \"maxAccessType\": \"required\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"constraint\",\n          \"automation\"\n        ],\n        \"confidential\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"array\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"readonly\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"string\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"hidden\",\n        \"maxAccessType\": \"hidden\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"constraint\",\n          \"constraint\"\n        ],\n        \"confidential\": \"<boolean>\"\n      }\n    ],\n    \"layout\": [\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"plain\",\n        \"defaultView\": \"expanded\",\n        \"pinned\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"plain\",\n        \"defaultView\": \"collapsed\",\n        \"pinned\": \"<boolean>\"\n      }\n    ],\n    \"automations\": [\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"trigger-btn\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"set-value\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"set-action-permission\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"before-action\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"if-else\",\n              \"config\": {\n                \"type\": \"autofill-enum\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"set-permission\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"enabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      }\n    ],\n    \"status\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"initial\": \"<boolean>\",\n      \"final\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"document\": {\n      \"id\": \"<uuid>\",\n      \"urn\": \"<string>\",\n      \"statusId\": \"<uuid>\",\n      \"formId\": \"<uuid>\",\n      \"form\": {\n        \"id\": \"<uuid>\",\n        \"abbr\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"cover\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"size\": \"<number>\",\n          \"name\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"enabled\": \"<boolean>\",\n        \"icon\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"initial\": \"<boolean>\",\n        \"final\": \"<boolean>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"creator\": {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      },\n      \"updatedBy\": {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      },\n      \"fields\": {\n        \"eiusmod18\": {},\n        \"ex97\": {},\n        \"in_f7\": {}\n      },\n      \"meta\": {\n        \"aliquip_b3\": {}\n      },\n      \"fieldsValid\": \"<boolean>\",\n      \"attachment\": {},\n      \"comment\": [\n        {\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\",\n          \"read\": \"<boolean>\",\n          \"sender\": {\n            \"type\": \"user\",\n            \"data\": {\n              \"name\": \"<string>\"\n            }\n          },\n          \"formattedText\": {},\n          \"attachments\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"mime\": \"<string>\",\n              \"size\": \"<number>\",\n              \"url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"mime\": \"<string>\",\n              \"size\": \"<number>\",\n              \"url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            }\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\",\n          \"read\": \"<boolean>\",\n          \"sender\": {\n            \"type\": \"system\",\n            \"data\": {\n              \"name\": \"<string>\"\n            }\n          },\n          \"formattedText\": {},\n          \"attachments\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"mime\": \"<string>\",\n              \"size\": \"<number>\",\n              \"url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"mime\": \"<string>\",\n              \"size\": \"<number>\",\n              \"url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            }\n          ]\n        }\n      ],\n      \"history\": [\n        {\n          \"id\": \"<uuid>\",\n          \"type\": \"comment-saved\",\n          \"createdAt\": \"<dateTime>\",\n          \"sender\": {\n            \"type\": \"user\",\n            \"data\": {\n              \"name\": \"<string>\"\n            }\n          },\n          \"context\": {},\n          \"senderUserId\": \"<uuid>\",\n          \"senderCompanyId\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"type\": \"action-reverted\",\n          \"createdAt\": \"<dateTime>\",\n          \"sender\": {\n            \"type\": \"automation\",\n            \"data\": {\n              \"name\": \"<string>\"\n            }\n          },\n          \"context\": {},\n          \"senderUserId\": \"<uuid>\",\n          \"senderCompanyId\": \"<uuid>\"\n        }\n      ],\n      \"followers\": [\n        {\n          \"userInfo\": {\n            \"id\": \"<uuid>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"avatar\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"deleted\": \"<boolean>\"\n          },\n          \"createdAt\": \"<dateTime>\"\n        },\n        {\n          \"userInfo\": {\n            \"id\": \"<uuid>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"avatar\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"deleted\": \"<boolean>\"\n          },\n          \"createdAt\": \"<dateTime>\"\n        }\n      ],\n      \"owner\": {\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"avatar\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"deleted\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"avatar\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"deleted\": \"<boolean>\"\n          }\n        ],\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ]\n      },\n      \"statusName\": \"<string>\",\n      \"slaStatus\": \"warn\",\n      \"slaDue\": \"<dateTime>\",\n      \"actions\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"accessType\": \"view\",\n      \"ownerType\": \"group\",\n      \"completed\": {},\n      \"lastStatusChange\": {},\n      \"label\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"header\": {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          \"description\": [\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            }\n          ]\n        }\n      },\n      \"archived\": \"<boolean>\"\n    },\n    \"isDocumentPublic\": \"<boolean>\",\n    \"actions\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"upload\",\n        \"title\": \"<string>\",\n        \"permission\": \"disabled\",\n        \"input\": {},\n        \"requiresInput\": \"<boolean>\",\n        \"hasRelatedAutomations\": \"<boolean>\",\n        \"disabledMessage\": \"<string>\",\n        \"style\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"assign\",\n        \"title\": \"<string>\",\n        \"permission\": \"hidden\",\n        \"input\": {},\n        \"requiresInput\": \"<boolean>\",\n        \"hasRelatedAutomations\": \"<boolean>\",\n        \"disabledMessage\": \"<string>\",\n        \"style\": {}\n      }\n    ],\n    \"verifiedContacts\": [\n      {\n        \"value\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"user\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"verifiedAt\": \"<dateTime>\"\n      },\n      {\n        \"value\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"user\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"verifiedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{documentId}",
									"item": [
										{
											"name": "currentUsers",
											"item": [
												{
													"name": "kick",
													"item": [
														{
															"name": "all",
															"item": [
																{
																	"name": "Kicks all users from using the document",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/currentUsers/kick/all",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"currentUsers",
																				"kick",
																				"all"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "documentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/documents/:documentId/currentUsers/kick/all",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"documents",
																						":documentId",
																						"currentUsers",
																						"kick",
																						"all"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "documentId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "{userId}",
															"item": [
																{
																	"name": "Kicks one user from using the document",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/currentUsers/kick/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"currentUsers",
																				"kick",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "documentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				},
																				{
																					"key": "userId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/documents/:documentId/currentUsers/kick/:userId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"documents",
																						":documentId",
																						"currentUsers",
																						"kick",
																						":userId"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "documentId"
																						},
																						{
																							"key": "userId"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "Lists users who is using the document",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/currentUsers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"currentUsers"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/currentUsers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"currentUsers"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "references",
											"item": [
												{
													"name": "Find document references",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/references",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"references"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"bprConfig\": {\n      \"relatedReferences\": [\n        {\n          \"id\": \"<string>\",\n          \"dataType\": \"database\",\n          \"config\": {\n            \"header\": {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            \"body\": [\n              {\n                \"keyPath\": \"<string>\",\n                \"showLabel\": \"<boolean>\"\n              },\n              {\n                \"keyPath\": \"<string>\",\n                \"showLabel\": \"<boolean>\"\n              }\n            ]\n          }\n        },\n        {\n          \"id\": \"<string>\",\n          \"dataType\": \"document\",\n          \"config\": {\n            \"header\": {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            \"body\": [\n              {\n                \"keyPath\": \"<string>\",\n                \"showLabel\": \"<boolean>\"\n              },\n              {\n                \"keyPath\": \"<string>\",\n                \"showLabel\": \"<boolean>\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"records\": [\n      {\n        \"dataType\": \"document\",\n        \"fields\": {\n          \"ut_8_\": {}\n        },\n        \"id\": \"<uuid>\",\n        \"formId\": \"<uuid>\",\n        \"clientDbId\": \"<uuid>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"urn\": \"<string>\",\n        \"statusId\": \"<string>\",\n        \"status\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"initial\": \"<boolean>\",\n          \"final\": \"<boolean>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"ownerType\": \"group\"\n      },\n      {\n        \"dataType\": \"document\",\n        \"fields\": {\n          \"sit0\": {},\n          \"aliqua_d1\": {}\n        },\n        \"id\": \"<uuid>\",\n        \"formId\": \"<uuid>\",\n        \"clientDbId\": \"<uuid>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"urn\": \"<string>\",\n        \"statusId\": \"<string>\",\n        \"status\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"initial\": \"<boolean>\",\n          \"final\": \"<boolean>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"ownerType\": \"group\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "data",
											"item": [
												{
													"name": "{fieldId}",
													"item": [
														{
															"name": "Get data for one field in a document",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/data/:fieldId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"data",
																		":fieldId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "fieldId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/data/:fieldId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"data",
																				":fieldId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "documentId"
																				},
																				{
																					"key": "fieldId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {},\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "history",
											"item": [
												{
													"name": "{historyId}",
													"item": [
														{
															"name": "Document History Controller find One",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/history/:historyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"history",
																		":historyId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "historyId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/history/:historyId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"history",
																				":historyId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "documentId"
																				},
																				{
																					"key": "historyId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"creation\",\n    \"createdAt\": \"<dateTime>\",\n    \"sender\": {\n      \"type\": \"api-app\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"context\": {},\n    \"senderUserId\": \"<uuid>\",\n    \"senderCompanyId\": \"<uuid>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Document History Controller find All",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/history?fromSenderId=<uuid>&sortDirection=desc&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"history"
															],
															"query": [
																{
																	"key": "fromSenderId",
																	"value": "<uuid>"
																},
																{
																	"key": "sortDirection",
																	"value": "desc"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/history?fromSenderId=<uuid>&sortDirection=desc&offset=<number>&limit=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"history"
																	],
																	"query": [
																		{
																			"key": "fromSenderId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "sortDirection",
																			"value": "desc"
																		},
																		{
																			"key": "offset",
																			"value": "<number>"
																		},
																		{
																			"key": "limit",
																			"value": "<number>",
																			"description": "0 is deprecated and will be replaced by 2000"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "comments",
											"item": [
												{
													"name": "{commentId}",
													"item": [
														{
															"name": "read",
															"item": [
																{
																	"name": "Document Comment Controller mark Read",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId/read",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"comments",
																				":commentId",
																				"read"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "documentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				},
																				{
																					"key": "commentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId/read",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"documents",
																						":documentId",
																						"comments",
																						":commentId",
																						"read"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "documentId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "unread",
															"item": [
																{
																	"name": "Document Comment Controller mark Un Read",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId/unread",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"comments",
																				":commentId",
																				"unread"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "documentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				},
																				{
																					"key": "commentId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId/unread",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"documents",
																						":documentId",
																						"comments",
																						":commentId",
																						"unread"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "documentId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "attachment",
															"item": [
																{
																	"name": "{fileId}",
																	"item": [
																		{
																			"name": "Document Comment Controller delete Attachment",
																			"request": {
																				"auth": {
																					"type": "bearer",
																					"bearer": [
																						{
																							"key": "token",
																							"value": "{{bearerToken}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId/attachment/:fileId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"documents",
																						":documentId",
																						"comments",
																						":commentId",
																						"attachment",
																						":fileId"
																					],
																					"variable": [
																						{
																							"key": "company",
																							"value": "<string>",
																							"description": "(Required) Company **UUID** or **URL Name**"
																						},
																						{
																							"key": "documentId",
																							"value": "<uuid>",
																							"description": "(Required) "
																						},
																						{
																							"key": "commentId",
																							"value": "<uuid>",
																							"description": "(Required) "
																						},
																						{
																							"key": "fileId",
																							"value": "<uuid>",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "Untitled Response",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Authorization",
																								"value": "Bearer <token>",
																								"description": "Added as a part of security scheme: bearer"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId/attachment/:fileId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								":company",
																								"documents",
																								":documentId",
																								"comments",
																								":commentId",
																								"attachment",
																								":fileId"
																							],
																							"variable": [
																								{
																									"key": "company"
																								},
																								{
																									"key": "documentId"
																								},
																								{
																									"key": "commentId"
																								},
																								{
																									"key": "fileId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "text",
																					"header": [],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "Document Comment Controller find By Id",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments",
																		":commentId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "commentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "documentId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"text\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"read\": \"<boolean>\",\n    \"sender\": {\n      \"type\": \"system\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"formattedText\": {},\n    \"attachments\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"mime\": \"<string>\",\n        \"size\": \"<number>\",\n        \"url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"mime\": \"<string>\",\n        \"size\": \"<number>\",\n        \"url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Document Comment Controller update",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"text\": \"<string>\",\n  \"formattedText\": {},\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments",
																		":commentId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "commentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"text\": \"<string>\",\n  \"formattedText\": {},\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "documentId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"text\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"read\": \"<boolean>\",\n    \"sender\": {\n      \"type\": \"system\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"formattedText\": {},\n    \"attachments\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"mime\": \"<string>\",\n        \"size\": \"<number>\",\n        \"url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"mime\": \"<string>\",\n        \"size\": \"<number>\",\n        \"url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Document Comment Controller delete",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments",
																		":commentId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "commentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "documentId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Document Comment Controller find All Comments",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments?searchText=<string>&sortDirection=desc&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"comments"
															],
															"query": [
																{
																	"key": "searchText",
																	"value": "<string>",
																	"description": "Text to search by"
																},
																{
																	"key": "sortDirection",
																	"value": "desc"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments?searchText=<string>&sortDirection=desc&offset=<number>&limit=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "searchText",
																			"value": "<string>",
																			"description": "Text to search by"
																		},
																		{
																			"key": "sortDirection",
																			"value": "desc"
																		},
																		{
																			"key": "offset",
																			"value": "<number>"
																		},
																		{
																			"key": "limit",
																			"value": "<number>",
																			"description": "0 is deprecated and will be replaced by 2000"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Document Comment Controller create",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"text\": \"<string>\",\n  \"formattedText\": {},\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"comments"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"text\": \"<string>\",\n  \"formattedText\": {},\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"text\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"read\": \"<boolean>\",\n    \"sender\": {\n      \"type\": \"system\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"formattedText\": {},\n    \"attachments\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"mime\": \"<string>\",\n        \"size\": \"<number>\",\n        \"url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"mime\": \"<string>\",\n        \"size\": \"<number>\",\n        \"url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "comments-history",
											"item": [
												{
													"name": "senders",
													"item": [
														{
															"name": "Document Comment Controller find All Senders",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments-history/senders?offset=<number>&limit=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments-history",
																		"senders"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "<number>"
																		},
																		{
																			"key": "limit",
																			"value": "<number>",
																			"description": "0 is deprecated and will be replaced by 2000"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "documentId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments-history/senders?offset=<number>&limit=<number>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"documents",
																				":documentId",
																				"comments-history",
																				"senders"
																			],
																			"query": [
																				{
																					"key": "offset",
																					"value": "<number>"
																				},
																				{
																					"key": "limit",
																					"value": "<number>",
																					"description": "0 is deprecated and will be replaced by 2000"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "documentId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Document Comment Controller find All Comment And History",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments-history?searchText=<string>&includeHistory=<boolean>&includeComments=<boolean>&senders=<uuid>&senders=<uuid>&sortDirection=desc&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"comments-history"
															],
															"query": [
																{
																	"key": "searchText",
																	"value": "<string>",
																	"description": "Text to search by"
																},
																{
																	"key": "includeHistory",
																	"value": "<boolean>"
																},
																{
																	"key": "includeComments",
																	"value": "<boolean>"
																},
																{
																	"key": "senders",
																	"value": "<uuid>",
																	"description": "List of sender uuid to filter"
																},
																{
																	"key": "senders",
																	"value": "<uuid>",
																	"description": "List of sender uuid to filter"
																},
																{
																	"key": "sortDirection",
																	"value": "desc"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/comments-history?searchText=<string>&includeHistory=<boolean>&includeComments=<boolean>&senders=<uuid>&sortDirection=desc&offset=<number>&limit=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"comments-history"
																	],
																	"query": [
																		{
																			"key": "searchText",
																			"value": "<string>",
																			"description": "Text to search by"
																		},
																		{
																			"key": "includeHistory",
																			"value": "<boolean>"
																		},
																		{
																			"key": "includeComments",
																			"value": "<boolean>"
																		},
																		{
																			"key": "senders",
																			"value": "<uuid>",
																			"description": "List of sender uuid to filter"
																		},
																		{
																			"key": "sortDirection",
																			"value": "desc"
																		},
																		{
																			"key": "offset",
																			"value": "<number>"
																		},
																		{
																			"key": "limit",
																			"value": "<number>",
																			"description": "0 is deprecated and will be replaced by 2000"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "followers",
											"item": [
												{
													"name": "Document Follower Controller find All",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/followers?offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"followers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/followers?offset=<number>&limit=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"followers"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "<number>"
																		},
																		{
																			"key": "limit",
																			"value": "<number>",
																			"description": "0 is deprecated and will be replaced by 2000"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "follower",
											"item": [
												{
													"name": "Document Follower Controller follow Document",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/follower",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"follower"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/follower",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"follower"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Document Follower Controller unfollow Document",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId/follower",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId",
																"follower"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "documentId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/:documentId/follower",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		":documentId",
																		"follower"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get Document by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/:documentId?load=owner&load=creator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														":documentId"
													],
													"query": [
														{
															"key": "load",
															"value": "owner",
															"description": "Specify additional properties to load"
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "documentId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId?load=creator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId"
															],
															"query": [
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\",\n    \"statusId\": \"<uuid>\",\n    \"formId\": \"<uuid>\",\n    \"form\": {\n      \"id\": \"<uuid>\",\n      \"abbr\": \"<string>\",\n      \"seq\": \"<number>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"cover\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"icon\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"initial\": \"<boolean>\",\n      \"final\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedBy\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"fields\": {\n      \"fugiat_2b7\": {},\n      \"dolor6\": {}\n    },\n    \"meta\": {\n      \"idf\": {}\n    },\n    \"fieldsValid\": \"<boolean>\",\n    \"attachment\": {},\n    \"comment\": [\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      }\n    ],\n    \"history\": [\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"sla-changed\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"action\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"automation\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      }\n    ],\n    \"followers\": [\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      }\n    ],\n    \"owner\": {\n      \"users\": [\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"statusName\": \"<string>\",\n    \"slaStatus\": \"off\",\n    \"slaDue\": \"<dateTime>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"accessType\": \"none\",\n    \"ownerType\": \"group\",\n    \"completed\": {},\n    \"lastStatusChange\": {},\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"archived\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Updates document directly",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fields\": {\n    \"ut06\": {}\n  },\n  \"id\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/:documentId?load=owner&load=creator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														":documentId"
													],
													"query": [
														{
															"key": "load",
															"value": "owner",
															"description": "Specify additional properties to load"
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "documentId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fields\": {\n    \"ut06\": {}\n  },\n  \"id\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId?load=creator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId"
															],
															"query": [
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a document by ID, if possible",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/:documentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														":documentId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "documentId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "urn",
									"item": [
										{
											"name": "{urn}",
											"item": [
												{
													"name": "Get Document by URN",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/urn/:urn?load=owner&load=creator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"urn",
																":urn"
															],
															"query": [
																{
																	"key": "load",
																	"value": "owner",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "urn",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/documents/urn/:urn?load=creator",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"documents",
																		"urn",
																		":urn"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "creator",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "urn"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\",\n    \"statusId\": \"<uuid>\",\n    \"formId\": \"<uuid>\",\n    \"form\": {\n      \"id\": \"<uuid>\",\n      \"abbr\": \"<string>\",\n      \"seq\": \"<number>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"cover\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"icon\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"initial\": \"<boolean>\",\n      \"final\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedBy\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"fields\": {\n      \"fugiat_2b7\": {},\n      \"dolor6\": {}\n    },\n    \"meta\": {\n      \"idf\": {}\n    },\n    \"fieldsValid\": \"<boolean>\",\n    \"attachment\": {},\n    \"comment\": [\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      }\n    ],\n    \"history\": [\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"sla-changed\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"action\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"automation\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      }\n    ],\n    \"followers\": [\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      }\n    ],\n    \"owner\": {\n      \"users\": [\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"statusName\": \"<string>\",\n    \"slaStatus\": \"off\",\n    \"slaDue\": \"<dateTime>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"accessType\": \"none\",\n    \"ownerType\": \"group\",\n    \"completed\": {},\n    \"lastStatusChange\": {},\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"archived\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count documents",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/count?source=completeTasks&globalSearch=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"count"
													],
													"query": [
														{
															"key": "source",
															"value": "completeTasks"
														},
														{
															"key": "globalSearch",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/count?source=completeTasks&globalSearch=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"count"
															],
															"query": [
																{
																	"key": "source",
																	"value": "completeTasks"
																},
																{
																	"key": "globalSearch",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "filterFields",
									"item": [
										{
											"name": "Get fields to filter documents",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fields\": {\n    \"ullamco59\": {},\n    \"reprehenderit_2a8\": {},\n    \"exercitation_1\": {},\n    \"occaecatf9\": {}\n  },\n  \"inputs\": {\n    \"additionalProperties\": {\n      \"search\": \"<string>\",\n      \"page\": {\n        \"offset\": \"<number>\",\n        \"limit\": \"<number>\"\n      },\n      \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/filterFields?ids=<string>&ids=<string>&preloadItemsCount=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"filterFields"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Return only fields with specific ids. Useful to refresh one field, when another field input changes"
														},
														{
															"key": "ids",
															"value": "<string>",
															"description": "Return only fields with specific ids. Useful to refresh one field, when another field input changes"
														},
														{
															"key": "preloadItemsCount",
															"value": "<number>",
															"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fields\": {\n    \"ullamco59\": {},\n    \"reprehenderit_2a8\": {},\n    \"exercitation_1\": {},\n    \"occaecatf9\": {}\n  },\n  \"inputs\": {\n    \"additionalProperties\": {\n      \"search\": \"<string>\",\n      \"page\": {\n        \"offset\": \"<number>\",\n        \"limit\": \"<number>\"\n      },\n      \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/filterFields?ids=<string>&preloadItemsCount=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"filterFields"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Return only fields with specific ids. Useful to refresh one field, when another field input changes"
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>",
																	"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "batch",
									"item": [
										{
											"name": "Creates or updates multiple documents",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"fields\": {\n      \"aliqua_12\": {},\n      \"occaecat21\": {}\n    },\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"fields\": {\n      \"laborum7\": {},\n      \"Ut46\": {}\n    },\n    \"id\": \"<uuid>\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents/batch?formId=<uuid>&load=owner&load=creator&statusId=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents",
														"batch"
													],
													"query": [
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "(Required) "
														},
														{
															"key": "load",
															"value": "owner",
															"description": "Specify additional properties to load"
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														},
														{
															"key": "statusId",
															"value": "<uuid>",
															"description": "If not specified, initial status will be used"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"fields\": {\n      \"aliqua_12\": {},\n      \"occaecat21\": {}\n    },\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"fields\": {\n      \"laborum7\": {},\n      \"Ut46\": {}\n    },\n    \"id\": \"<uuid>\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/documents/batch?formId=<uuid>&load=creator&statusId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"documents",
																"batch"
															],
															"query": [
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																},
																{
																	"key": "load",
																	"value": "creator",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "If not specified, initial status will be used"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Creates a document",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fields\": {\n    \"ut06\": {}\n  },\n  \"id\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:company/documents?formId=<uuid>&load=owner&load=creator&editSessionId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"documents"
											],
											"query": [
												{
													"key": "formId",
													"value": "<uuid>",
													"description": "(Required) "
												},
												{
													"key": "load",
													"value": "owner",
													"description": "Specify additional properties to load"
												},
												{
													"key": "load",
													"value": "creator",
													"description": "Specify additional properties to load"
												},
												{
													"key": "editSessionId",
													"value": "<uuid>"
												}
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fields\": {\n    \"ut06\": {}\n  },\n  \"id\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/documents?formId=<uuid>&load=creator&editSessionId=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"documents"
													],
													"query": [
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "(Required) "
														},
														{
															"key": "load",
															"value": "creator",
															"description": "Specify additional properties to load"
														},
														{
															"key": "editSessionId",
															"value": "<uuid>"
														}
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\",\n    \"statusId\": \"<uuid>\",\n    \"formId\": \"<uuid>\",\n    \"form\": {\n      \"id\": \"<uuid>\",\n      \"abbr\": \"<string>\",\n      \"seq\": \"<number>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"cover\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"icon\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"initial\": \"<boolean>\",\n      \"final\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedBy\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"fields\": {\n      \"fugiat_2b7\": {},\n      \"dolor6\": {}\n    },\n    \"meta\": {\n      \"idf\": {}\n    },\n    \"fieldsValid\": \"<boolean>\",\n    \"attachment\": {},\n    \"comment\": [\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"text\": \"<string>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"read\": \"<boolean>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"formattedText\": {},\n        \"attachments\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"mime\": \"<string>\",\n            \"size\": \"<number>\",\n            \"url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          }\n        ]\n      }\n    ],\n    \"history\": [\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"sla-changed\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"system\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"type\": \"action\",\n        \"createdAt\": \"<dateTime>\",\n        \"sender\": {\n          \"type\": \"automation\",\n          \"data\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"context\": {},\n        \"senderUserId\": \"<uuid>\",\n        \"senderCompanyId\": \"<uuid>\"\n      }\n    ],\n    \"followers\": [\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"userInfo\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"createdAt\": \"<dateTime>\"\n      }\n    ],\n    \"owner\": {\n      \"users\": [\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"statusName\": \"<string>\",\n    \"slaStatus\": \"off\",\n    \"slaDue\": \"<dateTime>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"accessType\": \"none\",\n    \"ownerType\": \"group\",\n    \"completed\": {},\n    \"lastStatusChange\": {},\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"archived\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "forms",
							"item": [
								{
									"name": "accessibleShortInfo",
									"item": [
										{
											"name": "Lists all accessible forms",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/forms/accessibleShortInfo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"forms",
														"accessibleShortInfo"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/accessibleShortInfo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																"accessibleShortInfo"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{formId}",
									"item": [
										{
											"name": "documentsUploadInfo",
											"item": [
												{
													"name": "Gets available upload documents info for form",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/documentsUploadInfo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"documentsUploadInfo"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/documentsUploadInfo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"documentsUploadInfo"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"allowedUploadStatuses\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "statuses",
											"item": [
												{
													"name": "initial",
													"item": [
														{
															"name": "Status Controller status Find Initial",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/initial?load=actions&load=actions&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses",
																		"initial"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/initial?load=actions&draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"statuses",
																				"initial"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "actions",
																					"description": "Specify additional properties to load"
																				},
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"finalPositive\": \"<boolean>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"save\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"assign\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"contains\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"excludes\",\n        \"style\": {}\n      }\n    ],\n    \"inUse\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "{statusId}",
													"item": [
														{
															"name": "Status Controller status Find By Id",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/:statusId?load=actions&load=actions&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses",
																		":statusId"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/:statusId?load=actions&draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"statuses",
																				":statusId"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "actions",
																					"description": "Specify additional properties to load"
																				},
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "statusId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"finalPositive\": \"<boolean>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"save\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"assign\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"contains\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"excludes\",\n        \"style\": {}\n      }\n    ],\n    \"inUse\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Status Controller status Update",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"initial\": \"<boolean>\",\n  \"final\": \"<boolean>\",\n  \"finalPositive\": \"<boolean>\",\n  \"accessConstraints\": [\n    {\n      \"type\": \"field-compare\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-in\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"owner\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-in\",\n      \"style\": {}\n    }\n  ],\n  \"actions\": [\n    {\n      \"type\": \"dynamic\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"individual\",\n        \"direction\": \"forward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    },\n    {\n      \"type\": \"save\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"individual\",\n        \"direction\": \"forward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/:statusId?load=actions&load=actions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses",
																		":statusId"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"initial\": \"<boolean>\",\n  \"final\": \"<boolean>\",\n  \"finalPositive\": \"<boolean>\",\n  \"accessConstraints\": [\n    {\n      \"type\": \"field-compare\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-in\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"owner\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-in\",\n      \"style\": {}\n    }\n  ],\n  \"actions\": [\n    {\n      \"type\": \"dynamic\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"individual\",\n        \"direction\": \"forward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    },\n    {\n      \"type\": \"save\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"individual\",\n        \"direction\": \"forward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/:statusId?load=actions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"statuses",
																				":statusId"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "actions",
																					"description": "Specify additional properties to load"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "statusId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"finalPositive\": \"<boolean>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"save\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"assign\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"contains\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"excludes\",\n        \"style\": {}\n      }\n    ],\n    \"inUse\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Status Controller status Delete",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/:statusId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses",
																		":statusId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/:statusId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"statuses",
																				":statusId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "statusId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "batch",
													"item": [
														{
															"name": "Overrides all statuses and their actions in single shot. All statuses and actions that not present in body would be removed in that form.",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"finalPositive\": \"<boolean>\",\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"any-in\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"less\",\n        \"style\": {}\n      }\n    ],\n    \"actions\": [\n      {\n        \"type\": \"upload\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"none\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"type\": \"dynamic\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"none\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"finalPositive\": \"<boolean>\",\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"starts-with\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"match-text\",\n        \"style\": {}\n      }\n    ],\n    \"actions\": [\n      {\n        \"type\": \"assign\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"type\": \"save\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ]\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/batch?load=actions&load=actions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses",
																		"batch"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"finalPositive\": \"<boolean>\",\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"any-in\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"less\",\n        \"style\": {}\n      }\n    ],\n    \"actions\": [\n      {\n        \"type\": \"upload\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"none\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"type\": \"dynamic\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"none\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"finalPositive\": \"<boolean>\",\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"starts-with\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"match-text\",\n        \"style\": {}\n      }\n    ],\n    \"actions\": [\n      {\n        \"type\": \"assign\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"type\": \"save\",\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ]\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/batch?load=actions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"statuses",
																				"batch"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "actions",
																					"description": "Specify additional properties to load"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "sorting",
													"item": [
														{
															"name": "Sets custom sorting, which is used when all statuses for form returned",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/sorting",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses",
																		"sorting"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses/sorting",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"statuses",
																				"sorting"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Status Controller status Find All",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses?load=actions&load=actions&draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"statuses"
															],
															"query": [
																{
																	"key": "load",
																	"value": "actions",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "load",
																	"value": "actions",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses?load=actions&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Status Controller status Create",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"initial\": \"<boolean>\",\n  \"final\": \"<boolean>\",\n  \"finalPositive\": \"<boolean>\",\n  \"accessConstraints\": [\n    {\n      \"type\": \"creator\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"contains\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"field-compare\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-equal\",\n      \"style\": {}\n    }\n  ],\n  \"actions\": [\n    {\n      \"type\": \"view\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"none\",\n        \"direction\": \"backward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    },\n    {\n      \"type\": \"view\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"none\",\n        \"direction\": \"forward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses?load=actions&load=actions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"statuses"
															],
															"query": [
																{
																	"key": "load",
																	"value": "actions",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "load",
																	"value": "actions",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"initial\": \"<boolean>\",\n  \"final\": \"<boolean>\",\n  \"finalPositive\": \"<boolean>\",\n  \"accessConstraints\": [\n    {\n      \"type\": \"creator\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"contains\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"field-compare\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-equal\",\n      \"style\": {}\n    }\n  ],\n  \"actions\": [\n    {\n      \"type\": \"view\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"none\",\n        \"direction\": \"backward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    },\n    {\n      \"type\": \"view\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"targetStatusId\": \"<uuid>\",\n        \"assignmentType\": \"none\",\n        \"direction\": \"forward\",\n        \"return\": \"<boolean>\"\n      },\n      \"machineName\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/statuses?load=actions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "actions",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"initial\": \"<boolean>\",\n    \"final\": \"<boolean>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"finalPositive\": \"<boolean>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"save\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"assign\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"accessConstraints\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"contains\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"excludes\",\n        \"style\": {}\n      }\n    ],\n    \"inUse\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "references",
											"item": [
												{
													"name": "Returns all external form references",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/references?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"references"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/references?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"references"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "fields",
											"item": [
												{
													"name": "{fieldId}",
													"item": [
														{
															"name": "Returns field by id",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/:fieldId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fields",
																		":fieldId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "fieldId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/:fieldId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fields",
																				":fieldId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "fieldId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"date\",\n    \"machineName\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"createdAt\": \"<dateTime>\",\n    \"label\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"form\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"idc5\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"aliquip_d3\": {},\n            \"ut_9b6\": {},\n            \"exercitation9\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"not-equal\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"not-in\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"and\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"limit-options\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"dropdown\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"manual\",\n      \"exclusiveMode\": \"field\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        }\n      ]\n    },\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"flags\": [\n      \"constraint\",\n      \"automation\"\n    ],\n    \"configName\": \"<string>\",\n    \"confidential\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Updates field inside form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"array\",\n  \"label\": \"<string>\",\n  \"machineName\": \"<string>\",\n  \"hint\": \"<string>\",\n  \"hintExpanded\": \"<boolean>\",\n  \"defaultValue\": {},\n  \"config\": {\n    \"dataType\": \"form\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"commodo3\": {}\n        },\n        \"color\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"Duis_5\": {},\n          \"in0\": {}\n        },\n        \"color\": \"<string>\"\n      }\n    ],\n    \"dataFilters\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"more-or-equal\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"more\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      }\n    ],\n    \"dataFiltersJoint\": \"or\",\n    \"dataFiltersCase\": [\n      \"autofill-option\",\n      \"limit-options\"\n    ],\n    \"filters\": \"<string>\",\n    \"displayType\": \"checklist\",\n    \"labelFormat\": \"<string>\",\n    \"imageKeyPath\": \"<string>\",\n    \"groupingKeyPath\": \"<string>\",\n    \"sublabelKeyPath\": \"<string>\",\n    \"uniquePerGroup\": \"<boolean>\",\n    \"labelType\": \"<string>\",\n    \"separator\": \"<string>\",\n    \"multiselect\": \"<boolean>\",\n    \"showCreateBpOrDt\": \"<boolean>\",\n    \"staticSource\": \"<boolean>\",\n    \"qrInput\": \"<boolean>\",\n    \"autopopulate\": \"<boolean>\",\n    \"selectAllMode\": \"none\",\n    \"exclusiveMode\": \"field\",\n    \"showReferenceInSource\": \"<boolean>\",\n    \"showReferenceInDestination\": \"<boolean>\",\n    \"sort\": [\n      {\n        \"key\": \"id\",\n        \"direction\": \"asc\"\n      },\n      {\n        \"key\": \"id\",\n        \"direction\": \"desc\"\n      }\n    ]\n  },\n  \"configName\": \"<string>\",\n  \"mobileConfig\": {\n    \"widget\": {\n      \"items\": [\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        }\n      ],\n      \"enabled\": \"<boolean>\",\n      \"headers\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"confidential\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/:fieldId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fields",
																		":fieldId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "fieldId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"type\": \"array\",\n  \"label\": \"<string>\",\n  \"machineName\": \"<string>\",\n  \"hint\": \"<string>\",\n  \"hintExpanded\": \"<boolean>\",\n  \"defaultValue\": {},\n  \"config\": {\n    \"dataType\": \"form\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"commodo3\": {}\n        },\n        \"color\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"Duis_5\": {},\n          \"in0\": {}\n        },\n        \"color\": \"<string>\"\n      }\n    ],\n    \"dataFilters\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"more-or-equal\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"more\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      }\n    ],\n    \"dataFiltersJoint\": \"or\",\n    \"dataFiltersCase\": [\n      \"autofill-option\",\n      \"limit-options\"\n    ],\n    \"filters\": \"<string>\",\n    \"displayType\": \"checklist\",\n    \"labelFormat\": \"<string>\",\n    \"imageKeyPath\": \"<string>\",\n    \"groupingKeyPath\": \"<string>\",\n    \"sublabelKeyPath\": \"<string>\",\n    \"uniquePerGroup\": \"<boolean>\",\n    \"labelType\": \"<string>\",\n    \"separator\": \"<string>\",\n    \"multiselect\": \"<boolean>\",\n    \"showCreateBpOrDt\": \"<boolean>\",\n    \"staticSource\": \"<boolean>\",\n    \"qrInput\": \"<boolean>\",\n    \"autopopulate\": \"<boolean>\",\n    \"selectAllMode\": \"none\",\n    \"exclusiveMode\": \"field\",\n    \"showReferenceInSource\": \"<boolean>\",\n    \"showReferenceInDestination\": \"<boolean>\",\n    \"sort\": [\n      {\n        \"key\": \"id\",\n        \"direction\": \"asc\"\n      },\n      {\n        \"key\": \"id\",\n        \"direction\": \"desc\"\n      }\n    ]\n  },\n  \"configName\": \"<string>\",\n  \"mobileConfig\": {\n    \"widget\": {\n      \"items\": [\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        }\n      ],\n      \"enabled\": \"<boolean>\",\n      \"headers\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"confidential\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/:fieldId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fields",
																				":fieldId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "fieldId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"date\",\n    \"machineName\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"createdAt\": \"<dateTime>\",\n    \"label\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"form\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"idc5\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"aliquip_d3\": {},\n            \"ut_9b6\": {},\n            \"exercitation9\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"not-equal\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"not-in\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"and\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"limit-options\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"dropdown\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"manual\",\n      \"exclusiveMode\": \"field\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        }\n      ]\n    },\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"flags\": [\n      \"constraint\",\n      \"automation\"\n    ],\n    \"configName\": \"<string>\",\n    \"confidential\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Softly delete field inside form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/:fieldId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fields",
																		":fieldId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "fieldId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/:fieldId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fields",
																				":fieldId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "fieldId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "batch",
													"item": [
														{
															"name": "Creates or updates fields for specific form (batch version)",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"type\": \"number\",\n    \"label\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"machineName\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"field\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"laborisc5b\": {},\n            \"esse2\": {},\n            \"cillum557\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"quis_0\": {},\n            \"proident_d_\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"equal\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"is-empty\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"or\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"autofill-option\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"dropdown\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"none\",\n      \"exclusiveMode\": \"field\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        }\n      ]\n    },\n    \"configName\": \"<string>\",\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"confidential\": \"<boolean>\"\n  },\n  {\n    \"type\": \"trigger-btn\",\n    \"label\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"machineName\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"form\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"dolora49\": {},\n            \"exercitation_ad\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"velitfa1\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"ends-with\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"excludes\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"and\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"limit-options\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"checklist\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"none\",\n      \"exclusiveMode\": \"none\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"asc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"asc\"\n        }\n      ]\n    },\n    \"configName\": \"<string>\",\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"confidential\": \"<boolean>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/batch",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fields",
																		"batch"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"type\": \"number\",\n    \"label\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"machineName\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"field\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"laborisc5b\": {},\n            \"esse2\": {},\n            \"cillum557\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"quis_0\": {},\n            \"proident_d_\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"equal\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"is-empty\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"or\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"autofill-option\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"dropdown\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"none\",\n      \"exclusiveMode\": \"field\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        }\n      ]\n    },\n    \"configName\": \"<string>\",\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"confidential\": \"<boolean>\"\n  },\n  {\n    \"type\": \"trigger-btn\",\n    \"label\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"machineName\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"form\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"dolora49\": {},\n            \"exercitation_ad\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"velitfa1\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"ends-with\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"excludes\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"and\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"limit-options\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"checklist\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"none\",\n      \"exclusiveMode\": \"none\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"asc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"asc\"\n        }\n      ]\n    },\n    \"configName\": \"<string>\",\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"confidential\": \"<boolean>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fields/batch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fields",
																				"batch"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Returns all fields for form",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/fields?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"fields"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														},
														"description": "Returns all **Fields** associated with **Form**. It returns only published     fields by default.\n\nUse `draft=true` in order to get **Fields** which is not published yet."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fields?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fields"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Creates new field for specific form",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"trigger-btn\",\n  \"label\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"machineName\": \"<string>\",\n  \"hint\": \"<string>\",\n  \"hintExpanded\": \"<boolean>\",\n  \"defaultValue\": {},\n  \"config\": {\n    \"dataType\": \"document\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"aliqua_a\": {},\n          \"deserunt_7_\": {}\n        },\n        \"color\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"exercitation_\": {},\n          \"occaecatb\": {},\n          \"amet_da\": {},\n          \"ad_c\": {}\n        },\n        \"color\": \"<string>\"\n      }\n    ],\n    \"dataFilters\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"equal\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"includes\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      }\n    ],\n    \"dataFiltersJoint\": \"and\",\n    \"dataFiltersCase\": [\n      \"autofill-option\",\n      \"limit-options\"\n    ],\n    \"filters\": \"<string>\",\n    \"displayType\": \"checklist\",\n    \"labelFormat\": \"<string>\",\n    \"imageKeyPath\": \"<string>\",\n    \"groupingKeyPath\": \"<string>\",\n    \"sublabelKeyPath\": \"<string>\",\n    \"uniquePerGroup\": \"<boolean>\",\n    \"labelType\": \"<string>\",\n    \"separator\": \"<string>\",\n    \"multiselect\": \"<boolean>\",\n    \"showCreateBpOrDt\": \"<boolean>\",\n    \"staticSource\": \"<boolean>\",\n    \"qrInput\": \"<boolean>\",\n    \"autopopulate\": \"<boolean>\",\n    \"selectAllMode\": \"none\",\n    \"exclusiveMode\": \"field\",\n    \"showReferenceInSource\": \"<boolean>\",\n    \"showReferenceInDestination\": \"<boolean>\",\n    \"sort\": [\n      {\n        \"key\": \"label\",\n        \"direction\": \"desc\"\n      },\n      {\n        \"key\": \"id\",\n        \"direction\": \"desc\"\n      }\n    ]\n  },\n  \"configName\": \"<string>\",\n  \"mobileConfig\": {\n    \"widget\": {\n      \"items\": [\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        }\n      ],\n      \"enabled\": \"<boolean>\",\n      \"headers\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"confidential\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"fields"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														},
														"description": "Creates new field for specific Form"
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"trigger-btn\",\n  \"label\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"machineName\": \"<string>\",\n  \"hint\": \"<string>\",\n  \"hintExpanded\": \"<boolean>\",\n  \"defaultValue\": {},\n  \"config\": {\n    \"dataType\": \"document\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"aliqua_a\": {},\n          \"deserunt_7_\": {}\n        },\n        \"color\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"value\": {},\n        \"sublabel\": \"<string>\",\n        \"imageId\": \"<string>\",\n        \"grouping\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"inactive\": \"<boolean>\",\n        \"extra\": {\n          \"exercitation_\": {},\n          \"occaecatb\": {},\n          \"amet_da\": {},\n          \"ad_c\": {}\n        },\n        \"color\": \"<string>\"\n      }\n    ],\n    \"dataFilters\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"equal\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"operator\": \"includes\",\n        \"value\": \"<string>\",\n        \"style\": {},\n        \"optional\": \"<boolean>\"\n      }\n    ],\n    \"dataFiltersJoint\": \"and\",\n    \"dataFiltersCase\": [\n      \"autofill-option\",\n      \"limit-options\"\n    ],\n    \"filters\": \"<string>\",\n    \"displayType\": \"checklist\",\n    \"labelFormat\": \"<string>\",\n    \"imageKeyPath\": \"<string>\",\n    \"groupingKeyPath\": \"<string>\",\n    \"sublabelKeyPath\": \"<string>\",\n    \"uniquePerGroup\": \"<boolean>\",\n    \"labelType\": \"<string>\",\n    \"separator\": \"<string>\",\n    \"multiselect\": \"<boolean>\",\n    \"showCreateBpOrDt\": \"<boolean>\",\n    \"staticSource\": \"<boolean>\",\n    \"qrInput\": \"<boolean>\",\n    \"autopopulate\": \"<boolean>\",\n    \"selectAllMode\": \"none\",\n    \"exclusiveMode\": \"field\",\n    \"showReferenceInSource\": \"<boolean>\",\n    \"showReferenceInDestination\": \"<boolean>\",\n    \"sort\": [\n      {\n        \"key\": \"label\",\n        \"direction\": \"desc\"\n      },\n      {\n        \"key\": \"id\",\n        \"direction\": \"desc\"\n      }\n    ]\n  },\n  \"configName\": \"<string>\",\n  \"mobileConfig\": {\n    \"widget\": {\n      \"items\": [\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"columnId\": \"<uuid>\"\n        }\n      ],\n      \"enabled\": \"<boolean>\",\n      \"headers\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"confidential\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"date\",\n    \"machineName\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"createdAt\": \"<dateTime>\",\n    \"label\": \"<string>\",\n    \"hint\": \"<string>\",\n    \"hintExpanded\": \"<boolean>\",\n    \"defaultValue\": {},\n    \"config\": {\n      \"dataType\": \"form\",\n      \"data\": [\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"idc5\": {}\n          },\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"label\": \"<string>\",\n          \"value\": {},\n          \"sublabel\": \"<string>\",\n          \"imageId\": \"<string>\",\n          \"grouping\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"inactive\": \"<boolean>\",\n          \"extra\": {\n            \"aliquip_d3\": {},\n            \"ut_9b6\": {},\n            \"exercitation9\": {}\n          },\n          \"color\": \"<string>\"\n        }\n      ],\n      \"dataFilters\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"not-equal\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"operator\": \"not-in\",\n          \"value\": \"<string>\",\n          \"style\": {},\n          \"optional\": \"<boolean>\"\n        }\n      ],\n      \"dataFiltersJoint\": \"and\",\n      \"dataFiltersCase\": [\n        \"limit-options\",\n        \"limit-options\"\n      ],\n      \"filters\": \"<string>\",\n      \"displayType\": \"dropdown\",\n      \"labelFormat\": \"<string>\",\n      \"imageKeyPath\": \"<string>\",\n      \"groupingKeyPath\": \"<string>\",\n      \"sublabelKeyPath\": \"<string>\",\n      \"uniquePerGroup\": \"<boolean>\",\n      \"labelType\": \"<string>\",\n      \"separator\": \"<string>\",\n      \"multiselect\": \"<boolean>\",\n      \"showCreateBpOrDt\": \"<boolean>\",\n      \"staticSource\": \"<boolean>\",\n      \"qrInput\": \"<boolean>\",\n      \"autopopulate\": \"<boolean>\",\n      \"selectAllMode\": \"manual\",\n      \"exclusiveMode\": \"field\",\n      \"showReferenceInSource\": \"<boolean>\",\n      \"showReferenceInDestination\": \"<boolean>\",\n      \"sort\": [\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        },\n        {\n          \"key\": \"id\",\n          \"direction\": \"desc\"\n        }\n      ]\n    },\n    \"mobileConfig\": {\n      \"widget\": {\n        \"items\": [\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          },\n          {\n            \"slot\": \"<string>\",\n            \"columnId\": \"<uuid>\"\n          }\n        ],\n        \"enabled\": \"<boolean>\",\n        \"headers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"flags\": [\n      \"constraint\",\n      \"automation\"\n    ],\n    \"configName\": \"<string>\",\n    \"confidential\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "layout",
											"item": [
												{
													"name": "Form Field Controller get Form Field Layout",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/layout?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"layout"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/layout?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"layout"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"sections\": [\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"grouped\",\n        \"defaultView\": \"expanded\",\n        \"pinned\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"plain\",\n        \"defaultView\": \"expanded\",\n        \"pinned\": \"<boolean>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Field Controller set Form Field Layout",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sections\": [\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"plain\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"grouped\",\n      \"defaultView\": \"collapsed\",\n      \"pinned\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/layout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"layout"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"sections\": [\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"plain\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"grouped\",\n      \"defaultView\": \"collapsed\",\n      \"pinned\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/layout",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"layout"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "inputFields",
											"item": [
												{
													"name": "Get all input fields for form ",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/inputFields?preloadItemsCount=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"inputFields"
															],
															"query": [
																{
																	"key": "preloadItemsCount",
																	"value": "<number>",
																	"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/inputFields?preloadItemsCount=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"inputFields"
																	],
																	"query": [
																		{
																			"key": "preloadItemsCount",
																			"value": "<number>",
																			"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "fieldPermissions",
											"item": [
												{
													"name": "grouped",
													"item": [
														{
															"name": "[DEPRECATED] Use /api/{company}/forms/{formId}/businessRules instead",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/grouped?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fieldPermissions",
																		"grouped"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/grouped?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fieldPermissions",
																				"grouped"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														},
														{
															"name": "[DEPRECATED] Use /api/{company}/forms/{formId}/businessRules instead",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"sections\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"hidden\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"editable\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"readonly\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"hidden\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"hidden\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"hidden\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"readonly\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"readonly\"\n      }\n    ],\n    \"referToStatusId\": \"<uuid>\"\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"sections\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"required\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"hidden\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"required\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"hidden\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"required\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"hidden\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"required\"\n      }\n    ],\n    \"referToStatusId\": \"<uuid>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/grouped",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fieldPermissions",
																		"grouped"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"sections\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"hidden\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"editable\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"readonly\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"hidden\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"hidden\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"hidden\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"readonly\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"readonly\"\n      }\n    ],\n    \"referToStatusId\": \"<uuid>\"\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"sections\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"required\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"hidden\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"required\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"hidden\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fields\": [\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"required\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"readonly\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"required\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"accessLevel\": \"hidden\",\n            \"columnPermissions\": [\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"accessLevel\": \"editable\"\n              }\n            ]\n          }\n        ],\n        \"allFieldsAccessLevel\": \"required\"\n      }\n    ],\n    \"referToStatusId\": \"<uuid>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/grouped",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fieldPermissions",
																				"grouped"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "{statusId}",
													"item": [
														{
															"name": "[DEPRECATED] Use /api/{company}/forms/{formId}/businessRules instead",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/:statusId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fieldPermissions",
																		":statusId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/:statusId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fieldPermissions",
																				":statusId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "statusId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														},
														{
															"name": "[DEPRECATED] Use /api/{company}/forms/{formId}/businessRules instead",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"fieldId\": \"<uuid>\",\n    \"accessLevel\": \"readonly\",\n    \"referToStatusId\": \"<uuid>\",\n    \"columnPermissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"hidden\"\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"readonly\"\n      }\n    ]\n  },\n  {\n    \"fieldId\": \"<uuid>\",\n    \"accessLevel\": \"readonly\",\n    \"referToStatusId\": \"<uuid>\",\n    \"columnPermissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"readonly\"\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"readonly\"\n      }\n    ]\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/:statusId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fieldPermissions",
																		":statusId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"fieldId\": \"<uuid>\",\n    \"accessLevel\": \"readonly\",\n    \"referToStatusId\": \"<uuid>\",\n    \"columnPermissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"hidden\"\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"readonly\"\n      }\n    ]\n  },\n  {\n    \"fieldId\": \"<uuid>\",\n    \"accessLevel\": \"readonly\",\n    \"referToStatusId\": \"<uuid>\",\n    \"columnPermissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"readonly\"\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"readonly\"\n      }\n    ]\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions/:statusId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"fieldPermissions",
																				":statusId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "statusId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "[DEPRECATED] Use /api/{company}/forms/{formId}/businessRules instead",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"fieldPermissions"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fieldPermissions"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "[DEPRECATED] Use /api/{company}/forms/{formId}/businessRules instead",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"permissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"required\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          }\n        ]\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"hidden\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"required\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"permissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"hidden\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"required\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          }\n        ]\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"required\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"hidden\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"required\"\n          }\n        ]\n      }\n    ]\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"fieldPermissions"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"permissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"required\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          }\n        ]\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"hidden\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"required\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"permissions\": [\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"hidden\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"required\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"readonly\"\n          }\n        ]\n      },\n      {\n        \"fieldId\": \"<uuid>\",\n        \"accessLevel\": \"required\",\n        \"referToStatusId\": \"<uuid>\",\n        \"columnPermissions\": [\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"hidden\"\n          },\n          {\n            \"fieldId\": \"<uuid>\",\n            \"accessLevel\": \"required\"\n          }\n        ]\n      }\n    ]\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/fieldPermissions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"fieldPermissions"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "displayData",
											"item": [
												{
													"name": "configs",
													"item": [
														{
															"name": "assignments",
															"item": [
																{
																	"name": "Find DisplayData assignments for form",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/assignments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs",
																				"assignments"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/assignments",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"displayData",
																						"configs",
																						"assignments"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "formId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																		}
																	]
																},
																{
																	"name": "Saves multiple DisplayData assignments for form",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"formId\": \"<uuid>\",\n    \"configId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"component\": \"bp-relationship\"\n  },\n  {\n    \"formId\": \"<uuid>\",\n    \"configId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"component\": \"tasks\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/assignments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs",
																				"assignments"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "[\n  {\n    \"formId\": \"<uuid>\",\n    \"configId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"component\": \"bp-relationship\"\n  },\n  {\n    \"formId\": \"<uuid>\",\n    \"configId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"component\": \"tasks\"\n  }\n]",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/assignments",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"displayData",
																						"configs",
																						"assignments"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "formId"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Deletes DisplayData assignments by ids for form",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/assignments?statusId=<uuid>&component=notifications",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "statusId",
																					"value": "<uuid>",
																					"description": "If null, means applied to all"
																				},
																				{
																					"key": "component",
																					"value": "notifications",
																					"description": "If null, means applied to all"
																				}
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/assignments?statusId=<uuid>&component=notifications",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"displayData",
																						"configs",
																						"assignments"
																					],
																					"query": [
																						{
																							"key": "statusId",
																							"value": "<uuid>",
																							"description": "If null, means applied to all"
																						},
																						{
																							"key": "component",
																							"value": "notifications",
																							"description": "If null, means applied to all"
																						}
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "formId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "createAndAssign",
															"item": [
																{
																	"name": "Creates new DisplayData configs and immediately assign it for form",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"formId\": \"<uuid>\",\n    \"config\": {\n      \"config\": [\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    \"statusId\": \"<uuid>\",\n    \"component\": \"tasks-table\"\n  },\n  {\n    \"formId\": \"<uuid>\",\n    \"config\": {\n      \"config\": [\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    \"statusId\": \"<uuid>\",\n    \"component\": \"tasks\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/createAndAssign",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs",
																				"createAndAssign"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "[\n  {\n    \"formId\": \"<uuid>\",\n    \"config\": {\n      \"config\": [\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    \"statusId\": \"<uuid>\",\n    \"component\": \"tasks-table\"\n  },\n  {\n    \"formId\": \"<uuid>\",\n    \"config\": {\n      \"config\": [\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"slot\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    \"statusId\": \"<uuid>\",\n    \"component\": \"tasks\"\n  }\n]",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/createAndAssign",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"displayData",
																						"configs",
																						"createAndAssign"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "formId"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "{configId}",
															"item": [
																{
																	"name": "Deletes displayData config by id",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/:configId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs",
																				":configId"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "formId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				},
																				{
																					"key": "configId",
																					"value": "<uuid>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs/:configId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"displayData",
																						"configs",
																						":configId"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "formId"
																						},
																						{
																							"key": "configId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Find all available DisplayData configs for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"displayData",
																		"configs"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														},
														{
															"name": "Saves multiple DisplayData configs for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"config\": [\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"config\": [\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"displayData",
																		"configs"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"config\": [\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"config\": [\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configs",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configs"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "config",
													"item": [
														{
															"name": "Find DisplayData config for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/config",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"displayData",
																		"config"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/config",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"config"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"config\": [\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"slot\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ],\n    \"name\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Saves DisplayData config for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"slot\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"showLabel\": \"<boolean>\"\n  },\n  {\n    \"slot\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"showLabel\": \"<boolean>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/config",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"displayData",
																		"config"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"slot\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"showLabel\": \"<boolean>\"\n  },\n  {\n    \"slot\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"showLabel\": \"<boolean>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/config",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"config"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "configKeyPaths",
													"item": [
														{
															"name": "Find all available KeyPaths to use with DisplayData configs for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configKeyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"displayData",
																		"configKeyPaths"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Use keyPath enum source"
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/displayData/configKeyPaths",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"displayData",
																				"configKeyPaths"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "businessRules",
											"item": [
												{
													"name": "Business Rule Controller get Rules",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/businessRules?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"businessRules"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/businessRules?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"businessRules"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Business Rule Controller set Rules",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"match-text\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"value\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"is-empty\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"disabled\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"is-empty\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"ends-with\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"value\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      }\n    ],\n    \"fields\": {\n      \"referToStatus\": \"<uuid>\",\n      \"sections\": [\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"match-text\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"field\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"not-in\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"editable\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"editable\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"starts-with\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"starts-with\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"editable\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"more\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"starts-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"more-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"readonly\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"not-equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"is-not-empty\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"editable\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"is-empty\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"is-included\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"more\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"group\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"is-excluded\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"field\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"more-or-equal\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"required\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"hidden\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"does-not-contain\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"any-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"includes\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"less-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"group\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"is-empty\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"not-equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"less-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"does-not-contain\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"any-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"not-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"count\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"ends-with\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"is-not-empty\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"hidden\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"more\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"value\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"less-or-equal\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"hidden\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"disabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      }\n    ],\n    \"fields\": {\n      \"referToStatus\": \"<uuid>\",\n      \"sections\": [\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"excludes\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"less\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"field\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"hidden\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"editable\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"ends-with\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"does-not-contain\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"less\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"not-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"does-not-contain\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"is-included\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"min\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"less-or-equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"not-in\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"includes\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"includes\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"less-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"readonly\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"any-in\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"ends-with\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"readonly\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"hidden\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"is-excluded\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"more\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"does-not-contain\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"contains\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"intersect\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"min\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"less\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"contains\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"match-text\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"is-included\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"contains\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"count\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/businessRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"businessRules"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"match-text\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"value\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"is-empty\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"disabled\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"is-empty\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"ends-with\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"value\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      }\n    ],\n    \"fields\": {\n      \"referToStatus\": \"<uuid>\",\n      \"sections\": [\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"match-text\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"field\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"not-in\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"editable\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"editable\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"starts-with\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"starts-with\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"editable\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"more\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"starts-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"more-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"readonly\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"not-equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"is-not-empty\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"editable\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"is-empty\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"is-included\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"more\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"group\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"is-excluded\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"field\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"more-or-equal\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"required\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"hidden\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"does-not-contain\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"any-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"includes\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"less-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"group\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"is-empty\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"not-equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"less-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"does-not-contain\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"any-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"not-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"count\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"ends-with\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"is-not-empty\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"hidden\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"enabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"rules\": {\n          \"when\": {\n            \"conditions\": [\n              {\n                \"operator\": \"more\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"value\",\n                \"value\": \"<uuid>\"\n              },\n              {\n                \"operator\": \"less-or-equal\",\n                \"field\": \"<uuid>\",\n                \"keyPath\": \"<string>\",\n                \"valueType\": \"field\",\n                \"value\": \"<uuid>\"\n              }\n            ],\n            \"joint\": \"and\"\n          },\n          \"onTrue\": {\n            \"setPermission\": \"hidden\"\n          },\n          \"onFalse\": {\n            \"setPermission\": \"disabled\"\n          },\n          \"disabledMessage\": \"<string>\"\n        }\n      }\n    ],\n    \"fields\": {\n      \"referToStatus\": \"<uuid>\",\n      \"sections\": [\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"excludes\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"less\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"field\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"hidden\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"editable\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"ends-with\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"does-not-contain\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"less\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"not-in\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"does-not-contain\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"is-included\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"min\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"less-or-equal\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"not-in\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"value\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"includes\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"includes\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"less-or-equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"readonly\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"rules\": {\n            \"when\": {\n              \"conditions\": [\n                {\n                  \"operator\": \"any-in\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                },\n                {\n                  \"operator\": \"ends-with\",\n                  \"field\": \"<uuid>\",\n                  \"keyPath\": \"<string>\",\n                  \"valueType\": \"value\",\n                  \"value\": \"<uuid>\"\n                }\n              ],\n              \"joint\": \"and\"\n            },\n            \"onTrue\": {\n              \"setPermission\": \"readonly\",\n              \"shouldClear\": \"<boolean>\"\n            },\n            \"onFalse\": {\n              \"setPermission\": \"hidden\",\n              \"shouldClear\": \"<boolean>\"\n            }\n          },\n          \"fields\": [\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"is-excluded\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"more\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"required\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"does-not-contain\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"contains\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"required\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"ends-with\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"intersect\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"min\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"avg\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"rules\": {\n                \"when\": {\n                  \"conditions\": [\n                    {\n                      \"operator\": \"less\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    },\n                    {\n                      \"operator\": \"contains\",\n                      \"field\": \"<uuid>\",\n                      \"keyPath\": \"<string>\",\n                      \"valueType\": \"field\",\n                      \"value\": \"<uuid>\"\n                    }\n                  ],\n                  \"joint\": \"and\"\n                },\n                \"onTrue\": {\n                  \"setPermission\": \"readonly\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                },\n                \"onFalse\": {\n                  \"setPermission\": \"hidden\",\n                  \"setValue\": {\n                    \"value\": {},\n                    \"fieldId\": \"<uuid>\",\n                    \"source\": {\n                      \"keyPath\": \"<string>\",\n                      \"referencedKeyPath\": \"<string>\"\n                    },\n                    \"compose\": {\n                      \"fieldIds\": [\n                        \"<uuid>\",\n                        \"<uuid>\"\n                      ],\n                      \"keyPaths\": [\n                        \"<string>\",\n                        \"<string>\"\n                      ],\n                      \"separator\": \"<string>\"\n                    }\n                  },\n                  \"shouldClear\": \"<boolean>\"\n                }\n              },\n              \"columns\": [\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"equal\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"match-text\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"value\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"editable\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                },\n                {\n                  \"id\": \"<uuid>\",\n                  \"rules\": {\n                    \"when\": {\n                      \"conditions\": [\n                        {\n                          \"operator\": \"is-included\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        },\n                        {\n                          \"operator\": \"contains\",\n                          \"field\": \"<uuid>\",\n                          \"keyPath\": \"<string>\",\n                          \"valueType\": \"field\",\n                          \"value\": \"<uuid>\"\n                        }\n                      ],\n                      \"joint\": \"and\"\n                    },\n                    \"onTrue\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    },\n                    \"onFalse\": {\n                      \"setPermission\": \"hidden\",\n                      \"setValue\": {\n                        \"value\": {},\n                        \"fieldId\": \"<uuid>\",\n                        \"source\": {\n                          \"keyPath\": \"<string>\",\n                          \"referencedKeyPath\": \"<string>\"\n                        },\n                        \"compose\": {\n                          \"fieldIds\": [\n                            \"<uuid>\",\n                            \"<uuid>\"\n                          ],\n                          \"keyPaths\": [\n                            \"<string>\",\n                            \"<string>\"\n                          ],\n                          \"separator\": \"<string>\"\n                        }\n                      },\n                      \"shouldClear\": \"<boolean>\"\n                    }\n                  }\n                }\n              ],\n              \"consolidateTable\": {\n                \"referenceKeyPath\": \"<string>\",\n                \"columns\": [\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"count\"\n                  },\n                  {\n                    \"fromColumnOrFieldId\": \"<uuid>\",\n                    \"toColumnId\": \"<uuid>\",\n                    \"action\": \"max\"\n                  }\n                ],\n                \"sourceTableId\": \"<uuid>\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/businessRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"businessRules"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "publish",
											"item": [
												{
													"name": "Writes all forms data from draft to public access",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/publish?force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"publish"
															],
															"query": [
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/publish?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"publish"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "(Required) "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "roles",
											"item": [
												{
													"name": "{roleId}",
													"item": [
														{
															"name": "constraints",
															"item": [
																{
																	"name": "{statusId}",
																	"item": [
																		{
																			"name": "Sets role constraints per status",
																			"request": {
																				"auth": {
																					"type": "bearer",
																					"bearer": [
																						{
																							"key": "token",
																							"value": "{{bearerToken}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "[\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"excludes\",\n    \"style\": {}\n  },\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"starts-with\",\n    \"style\": {}\n  }\n]",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId/constraints/:statusId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"roles",
																						":roleId",
																						"constraints",
																						":statusId"
																					],
																					"variable": [
																						{
																							"key": "company",
																							"value": "<string>",
																							"description": "(Required) Company **UUID** or **URL Name**"
																						},
																						{
																							"key": "formId",
																							"value": "<uuid>",
																							"description": "(Required) "
																						},
																						{
																							"key": "roleId",
																							"value": "<uuid>",
																							"description": "(Required) "
																						},
																						{
																							"key": "statusId",
																							"value": "<uuid>",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "Untitled Response",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Bearer <token>",
																								"description": "Added as a part of security scheme: bearer"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "[\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"excludes\",\n    \"style\": {}\n  },\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"starts-with\",\n    \"style\": {}\n  }\n]",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId/constraints/:statusId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								":company",
																								"forms",
																								":formId",
																								"roles",
																								":roleId",
																								"constraints",
																								":statusId"
																							],
																							"variable": [
																								{
																									"key": "company"
																								},
																								{
																									"key": "formId"
																								},
																								{
																									"key": "roleId"
																								},
																								{
																									"key": "statusId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "Get roles for form by id",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId?load=users&load=users&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"roles",
																		":roleId"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "roleId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId?load=users&draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"roles",
																				":roleId"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "users",
																					"description": "Specify additional properties to load"
																				},
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "roleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"automatic\": \"<boolean>\",\n    \"groups\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      }\n    ],\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"upload\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"view\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      }\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"is-not-empty\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"does-not-match-text\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"does-not-match-text\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"match-text\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"contains\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"ends-with\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Updates role for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"groupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"actionIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"constraintsForRole\": [\n    {\n      \"type\": \"creator\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"less-or-equal\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"field-compare\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-in\",\n      \"style\": {}\n    }\n  ],\n  \"constraintsPerStatus\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"creator\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"any-in\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"includes\",\n          \"style\": {}\n        }\n      ]\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"creator\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"is-not-empty\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"field-compare\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"is-not-empty\",\n          \"style\": {}\n        }\n      ]\n    }\n  ],\n  \"readonlyStatusIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId?load=users&load=users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"roles",
																		":roleId"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "roleId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"groupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"actionIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"constraintsForRole\": [\n    {\n      \"type\": \"creator\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"less-or-equal\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"field-compare\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"not-in\",\n      \"style\": {}\n    }\n  ],\n  \"constraintsPerStatus\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"creator\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"any-in\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"includes\",\n          \"style\": {}\n        }\n      ]\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"creator\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"is-not-empty\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"field-compare\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"is-not-empty\",\n          \"style\": {}\n        }\n      ]\n    }\n  ],\n  \"readonlyStatusIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId?load=users",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"roles",
																				":roleId"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "users",
																					"description": "Specify additional properties to load"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "roleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"automatic\": \"<boolean>\",\n    \"groups\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      }\n    ],\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"upload\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"view\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      }\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"is-not-empty\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"does-not-match-text\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"does-not-match-text\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"match-text\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"contains\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"ends-with\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Deletes role for form",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"roles",
																		":roleId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "roleId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/:roleId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"roles",
																				":roleId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "roleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"automatic\": \"<boolean>\",\n    \"groups\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      }\n    ],\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"upload\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"view\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      }\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"is-not-empty\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"does-not-match-text\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"does-not-match-text\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"match-text\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"contains\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"ends-with\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "batch",
													"item": [
														{
															"name": "Creates new role for form (batch version)",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"groupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"userIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"actionIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"excludes\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"does-not-contain\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"intersect\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"is-empty\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"includes\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"is-empty\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"groupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"userIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"actionIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"owner\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"more\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"ends-with\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"is-included\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"less-or-equal\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"starts-with\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"does-not-match-text\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/batch?load=users&load=users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"roles",
																		"batch"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"groupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"userIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"actionIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"excludes\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"does-not-contain\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"intersect\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"is-empty\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"includes\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"is-empty\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"groupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"userIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"actionIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"owner\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"more\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"ends-with\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"is-included\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"less-or-equal\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"owner\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"starts-with\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"does-not-match-text\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/roles/batch?load=users",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"roles",
																				"batch"
																			],
																			"query": [
																				{
																					"key": "load",
																					"value": "users",
																					"description": "Specify additional properties to load"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get all roles for form",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/roles?includeEmpty=<boolean>&load=users&load=users&draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"roles"
															],
															"query": [
																{
																	"key": "includeEmpty",
																	"value": "<boolean>",
																	"description": "Specifies if endpoint should return roles without any user or group"
																},
																{
																	"key": "load",
																	"value": "users",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "load",
																	"value": "users",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/roles?includeEmpty=<boolean>&load=users&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "includeEmpty",
																			"value": "<boolean>",
																			"description": "Specifies if endpoint should return roles without any user or group"
																		},
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Creates new role for form",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"groupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"actionIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"constraintsForRole\": [\n    {\n      \"type\": \"owner\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"equal\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"creator\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"excludes\",\n      \"style\": {}\n    }\n  ],\n  \"constraintsPerStatus\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"field-compare\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"any-in\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"more-or-equal\",\n          \"style\": {}\n        }\n      ]\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"includes\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"more\",\n          \"style\": {}\n        }\n      ]\n    }\n  ],\n  \"readonlyStatusIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/roles?load=users&load=users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"roles"
															],
															"query": [
																{
																	"key": "load",
																	"value": "users",
																	"description": "Specify additional properties to load"
																},
																{
																	"key": "load",
																	"value": "users",
																	"description": "Specify additional properties to load"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"groupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"actionIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"constraintsForRole\": [\n    {\n      \"type\": \"owner\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"equal\",\n      \"style\": {}\n    },\n    {\n      \"type\": \"creator\",\n      \"documentKeyPath\": \"<string>\",\n      \"userKeyPath\": \"<string>\",\n      \"operator\": \"excludes\",\n      \"style\": {}\n    }\n  ],\n  \"constraintsPerStatus\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"field-compare\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"any-in\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"more-or-equal\",\n          \"style\": {}\n        }\n      ]\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"constraints\": [\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"includes\",\n          \"style\": {}\n        },\n        {\n          \"type\": \"owner\",\n          \"documentKeyPath\": \"<string>\",\n          \"userKeyPath\": \"<string>\",\n          \"operator\": \"more\",\n          \"style\": {}\n        }\n      ]\n    }\n  ],\n  \"readonlyStatusIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/roles?load=users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "load",
																			"value": "users",
																			"description": "Specify additional properties to load"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"automatic\": \"<boolean>\",\n    \"groups\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"seq\": \"<number>\",\n        \"automatic\": \"<boolean>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"users\": [\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"active\": \"<boolean>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\"\n          }\n        ],\n        \"usersCount\": \"<number>\",\n        \"groups\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"portalId\": \"<string>\"\n      }\n    ],\n    \"actions\": [\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"upload\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"forward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"statusId\": \"<uuid>\",\n        \"type\": \"view\",\n        \"name\": \"<string>\",\n        \"config\": {\n          \"targetStatusId\": \"<uuid>\",\n          \"assignmentType\": \"individual\",\n          \"direction\": \"backward\",\n          \"return\": \"<boolean>\"\n        },\n        \"machineName\": \"<string>\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"deleted\": \"<boolean>\"\n      }\n    ],\n    \"constraintsForRole\": [\n      {\n        \"type\": \"creator\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"is-not-empty\",\n        \"style\": {}\n      },\n      {\n        \"type\": \"field-compare\",\n        \"documentKeyPath\": \"<string>\",\n        \"userKeyPath\": \"<string>\",\n        \"operator\": \"does-not-match-text\",\n        \"style\": {}\n      }\n    ],\n    \"constraintsPerStatus\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"does-not-match-text\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"match-text\",\n            \"style\": {}\n          }\n        ]\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"constraints\": [\n          {\n            \"type\": \"creator\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"contains\",\n            \"style\": {}\n          },\n          {\n            \"type\": \"field-compare\",\n            \"documentKeyPath\": \"<string>\",\n            \"userKeyPath\": \"<string>\",\n            \"operator\": \"ends-with\",\n            \"style\": {}\n          }\n        ]\n      }\n    ],\n    \"readonlyStatusIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "constraintTemplates",
											"item": [
												{
													"name": "Role Controller find Constraint Templates",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/constraintTemplates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"constraintTemplates"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/constraintTemplates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"constraintTemplates"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Role Controller set Constraint Templates",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"excludes\",\n    \"style\": {}\n  },\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"starts-with\",\n    \"style\": {}\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/constraintTemplates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"constraintTemplates"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"excludes\",\n    \"style\": {}\n  },\n  {\n    \"type\": \"creator\",\n    \"documentKeyPath\": \"<string>\",\n    \"userKeyPath\": \"<string>\",\n    \"operator\": \"starts-with\",\n    \"style\": {}\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/constraintTemplates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"constraintTemplates"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "clientAutomations",
											"item": [
												{
													"name": "Client Automation Controller get Client Automations",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/clientAutomations?includeDebugName=<boolean>&statusId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"clientAutomations"
															],
															"query": [
																{
																	"key": "includeDebugName",
																	"value": "<boolean>"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/clientAutomations?includeDebugName=<boolean>&statusId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"clientAutomations"
																	],
																	"query": [
																		{
																			"key": "includeDebugName",
																			"value": "<boolean>"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "sla",
											"item": [
												{
													"name": "Form Config Controller get Config Sla",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/sla?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"sla"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/sla?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"sla"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"taskAssigned\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"warningInterval\": {\n          \"unit\": \"d\",\n          \"value\": \"<number>\"\n        },\n        \"interval\": {\n          \"unit\": \"d\",\n          \"value\": \"<number>\"\n        },\n        \"deadline\": {\n          \"value\": \"<dateTime>\",\n          \"keyPath\": \"<string>\",\n          \"refFieldId\": \"<uuid>\"\n        }\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"warningInterval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        },\n        \"interval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        },\n        \"deadline\": {\n          \"value\": \"<dateTime>\",\n          \"keyPath\": \"<string>\",\n          \"refFieldId\": \"<uuid>\"\n        }\n      }\n    ],\n    \"processLaunch\": {\n      \"warningInterval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"h\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    },\n    \"workTimeIntervals\": [\n      {\n        \"dayOfWeek\": \"thu\",\n        \"startTime\": \"<time>\",\n        \"endTime\": \"<time>\"\n      },\n      {\n        \"dayOfWeek\": \"wed\",\n        \"startTime\": \"<time>\",\n        \"endTime\": \"<time>\"\n      }\n    ],\n    \"includeDraft\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller set Config Sla",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"taskAssigned\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"warningInterval\": {\n        \"unit\": \"h\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"warningInterval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"h\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    }\n  ],\n  \"processLaunch\": {\n    \"warningInterval\": {\n      \"unit\": \"d\",\n      \"value\": \"<number>\"\n    },\n    \"interval\": {\n      \"unit\": \"d\",\n      \"value\": \"<number>\"\n    },\n    \"deadline\": {\n      \"value\": \"<dateTime>\",\n      \"keyPath\": \"<string>\",\n      \"refFieldId\": \"<uuid>\"\n    }\n  },\n  \"workTimeIntervals\": [\n    {\n      \"dayOfWeek\": \"mon\",\n      \"startTime\": \"<time>\",\n      \"endTime\": \"<time>\"\n    },\n    {\n      \"dayOfWeek\": \"fri\",\n      \"startTime\": \"<time>\",\n      \"endTime\": \"<time>\"\n    }\n  ],\n  \"includeDraft\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/sla",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"sla"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"taskAssigned\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"warningInterval\": {\n        \"unit\": \"h\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"warningInterval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"h\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    }\n  ],\n  \"processLaunch\": {\n    \"warningInterval\": {\n      \"unit\": \"d\",\n      \"value\": \"<number>\"\n    },\n    \"interval\": {\n      \"unit\": \"d\",\n      \"value\": \"<number>\"\n    },\n    \"deadline\": {\n      \"value\": \"<dateTime>\",\n      \"keyPath\": \"<string>\",\n      \"refFieldId\": \"<uuid>\"\n    }\n  },\n  \"workTimeIntervals\": [\n    {\n      \"dayOfWeek\": \"mon\",\n      \"startTime\": \"<time>\",\n      \"endTime\": \"<time>\"\n    },\n    {\n      \"dayOfWeek\": \"fri\",\n      \"startTime\": \"<time>\",\n      \"endTime\": \"<time>\"\n    }\n  ],\n  \"includeDraft\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/sla",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"sla"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"taskAssigned\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"warningInterval\": {\n          \"unit\": \"d\",\n          \"value\": \"<number>\"\n        },\n        \"interval\": {\n          \"unit\": \"d\",\n          \"value\": \"<number>\"\n        },\n        \"deadline\": {\n          \"value\": \"<dateTime>\",\n          \"keyPath\": \"<string>\",\n          \"refFieldId\": \"<uuid>\"\n        }\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"warningInterval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        },\n        \"interval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        },\n        \"deadline\": {\n          \"value\": \"<dateTime>\",\n          \"keyPath\": \"<string>\",\n          \"refFieldId\": \"<uuid>\"\n        }\n      }\n    ],\n    \"processLaunch\": {\n      \"warningInterval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"h\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    },\n    \"workTimeIntervals\": [\n      {\n        \"dayOfWeek\": \"thu\",\n        \"startTime\": \"<time>\",\n        \"endTime\": \"<time>\"\n      },\n      {\n        \"dayOfWeek\": \"wed\",\n        \"startTime\": \"<time>\",\n        \"endTime\": \"<time>\"\n      }\n    ],\n    \"includeDraft\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "slaAndStatuses",
											"item": [
												{
													"name": "Form Config Controller get Config And Statuses Sla",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/slaAndStatuses?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"slaAndStatuses"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/slaAndStatuses?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"slaAndStatuses"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"taskAssigned\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"initial\": \"<boolean>\",\n        \"final\": \"<boolean>\",\n        \"interval\": {\n          \"unit\": \"d\",\n          \"value\": \"<number>\"\n        },\n        \"warningInterval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        }\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"initial\": \"<boolean>\",\n        \"final\": \"<boolean>\",\n        \"interval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        },\n        \"warningInterval\": {\n          \"unit\": \"h\",\n          \"value\": \"<number>\"\n        }\n      }\n    ],\n    \"processLaunch\": {\n      \"warningInterval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"interval\": {\n        \"unit\": \"d\",\n        \"value\": \"<number>\"\n      },\n      \"deadline\": {\n        \"value\": \"<dateTime>\",\n        \"keyPath\": \"<string>\",\n        \"refFieldId\": \"<uuid>\"\n      }\n    },\n    \"workTimeIntervals\": [\n      {\n        \"dayOfWeek\": \"sat\",\n        \"startTime\": \"<time>\",\n        \"endTime\": \"<time>\"\n      },\n      {\n        \"dayOfWeek\": \"mon\",\n        \"startTime\": \"<time>\",\n        \"endTime\": \"<time>\"\n      }\n    ],\n    \"includeDraft\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "bpr",
											"item": [
												{
													"name": "Form Config Controller get Config Bpr",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/bpr?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"bpr"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/bpr?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"bpr"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"relatedReferences\": [\n      {\n        \"id\": \"<string>\",\n        \"dataType\": \"database\",\n        \"config\": {\n          \"header\": {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          \"body\": [\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            }\n          ]\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"dataType\": \"document\",\n        \"config\": {\n          \"header\": {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          \"body\": [\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller set Bpr",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relatedReferences\": [\n    {\n      \"id\": \"<string>\",\n      \"dataType\": \"document\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"body\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"dataType\": \"database\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"body\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/bpr",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"bpr"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"relatedReferences\": [\n    {\n      \"id\": \"<string>\",\n      \"dataType\": \"document\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"body\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"dataType\": \"database\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"body\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/bpr",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"bpr"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"relatedReferences\": [\n      {\n        \"id\": \"<string>\",\n        \"dataType\": \"database\",\n        \"config\": {\n          \"header\": {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          \"body\": [\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            }\n          ]\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"dataType\": \"document\",\n        \"config\": {\n          \"header\": {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          \"body\": [\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            },\n            {\n              \"keyPath\": \"<string>\",\n              \"showLabel\": \"<boolean>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "tasksLayout",
											"item": [
												{
													"name": "{statusId}",
													"item": [
														{
															"name": "Form Config Controller get Task Layout By Status",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/tasksLayout/:statusId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"tasksLayout",
																		":statusId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This endpoint will be removed in the next release"
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/tasksLayout/:statusId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"tasksLayout",
																				":statusId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "statusId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"filters\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"autopopulated\",\n        \"keyPaths\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"placement\": \"<string>\",\n        \"isArrayInput\": \"<boolean>\",\n        \"isRangeInput\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"time\",\n        \"keyPaths\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"placement\": \"<string>\",\n        \"isArrayInput\": \"<boolean>\",\n        \"isRangeInput\": \"<boolean>\"\n      }\n    ],\n    \"columns\": [\n      {\n        \"name\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"allowEdit\": \"<boolean>\",\n        \"includeAggregate\": \"<boolean>\",\n        \"aggregateOperator\": \"sum\",\n        \"aggregateLabel\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"allowEdit\": \"<boolean>\",\n        \"includeAggregate\": \"<boolean>\",\n        \"aggregateOperator\": \"average\",\n        \"aggregateLabel\": \"<string>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Form Config Controller get Task Layout",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/tasksLayout?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"tasksLayout"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/tasksLayout?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"tasksLayout"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"statusLayouts\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"referToStatusId\": \"<uuid>\",\n        \"layout\": {\n          \"filters\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"string\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"string\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            }\n          ],\n          \"columns\": [\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"count\",\n              \"aggregateLabel\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"count\",\n              \"aggregateLabel\": \"<string>\"\n            }\n          ]\n        }\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"referToStatusId\": \"<uuid>\",\n        \"layout\": {\n          \"filters\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"string\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"enum\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            }\n          ],\n          \"columns\": [\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"sum\",\n              \"aggregateLabel\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"sum\",\n              \"aggregateLabel\": \"<string>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller set Tasks Layout",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"statusLayouts\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"referToStatusId\": \"<uuid>\",\n      \"layout\": {\n        \"filters\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"enum\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"enum\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          }\n        ],\n        \"columns\": [\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"sum\",\n            \"aggregateLabel\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"sum\",\n            \"aggregateLabel\": \"<string>\"\n          }\n        ]\n      }\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"referToStatusId\": \"<uuid>\",\n      \"layout\": {\n        \"filters\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"autopopulated\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"date\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          }\n        ],\n        \"columns\": [\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"sum\",\n            \"aggregateLabel\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"average\",\n            \"aggregateLabel\": \"<string>\"\n          }\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/tasksLayout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"tasksLayout"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"statusLayouts\": [\n    {\n      \"statusId\": \"<uuid>\",\n      \"referToStatusId\": \"<uuid>\",\n      \"layout\": {\n        \"filters\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"enum\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"enum\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          }\n        ],\n        \"columns\": [\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"sum\",\n            \"aggregateLabel\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"sum\",\n            \"aggregateLabel\": \"<string>\"\n          }\n        ]\n      }\n    },\n    {\n      \"statusId\": \"<uuid>\",\n      \"referToStatusId\": \"<uuid>\",\n      \"layout\": {\n        \"filters\": [\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"autopopulated\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"name\": \"<string>\",\n            \"type\": \"date\",\n            \"keyPaths\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"placement\": \"<string>\",\n            \"isArrayInput\": \"<boolean>\",\n            \"isRangeInput\": \"<boolean>\"\n          }\n        ],\n        \"columns\": [\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"sum\",\n            \"aggregateLabel\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"keyPath\": \"<string>\",\n            \"allowEdit\": \"<boolean>\",\n            \"includeAggregate\": \"<boolean>\",\n            \"aggregateOperator\": \"average\",\n            \"aggregateLabel\": \"<string>\"\n          }\n        ]\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/tasksLayout",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"tasksLayout"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"statusLayouts\": [\n      {\n        \"statusId\": \"<uuid>\",\n        \"referToStatusId\": \"<uuid>\",\n        \"layout\": {\n          \"filters\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"string\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"string\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            }\n          ],\n          \"columns\": [\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"count\",\n              \"aggregateLabel\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"count\",\n              \"aggregateLabel\": \"<string>\"\n            }\n          ]\n        }\n      },\n      {\n        \"statusId\": \"<uuid>\",\n        \"referToStatusId\": \"<uuid>\",\n        \"layout\": {\n          \"filters\": [\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"string\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"name\": \"<string>\",\n              \"type\": \"enum\",\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"placement\": \"<string>\",\n              \"isArrayInput\": \"<boolean>\",\n              \"isRangeInput\": \"<boolean>\"\n            }\n          ],\n          \"columns\": [\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"sum\",\n              \"aggregateLabel\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"allowEdit\": \"<boolean>\",\n              \"includeAggregate\": \"<boolean>\",\n              \"aggregateOperator\": \"sum\",\n              \"aggregateLabel\": \"<string>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "filters",
											"item": [
												{
													"name": "Form Config Controller get Custom Filter",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/filters?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"filters"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/filters?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"filters"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller set Custom Filter",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"date-time\",\n    \"keyPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"placement\": \"<string>\",\n    \"isArrayInput\": \"<boolean>\",\n    \"isRangeInput\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"date-time\",\n    \"keyPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"placement\": \"<string>\",\n    \"isArrayInput\": \"<boolean>\",\n    \"isRangeInput\": \"<boolean>\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/filters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"filters"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"date-time\",\n    \"keyPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"placement\": \"<string>\",\n    \"isArrayInput\": \"<boolean>\",\n    \"isRangeInput\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"date-time\",\n    \"keyPaths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"placement\": \"<string>\",\n    \"isArrayInput\": \"<boolean>\",\n    \"isRangeInput\": \"<boolean>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/filters",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"filters"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "listColumns",
											"item": [
												{
													"name": "Form Config Controller get List Columns",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/listColumns?order=view&draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"listColumns"
															],
															"query": [
																{
																	"key": "order",
																	"value": "view"
																},
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/listColumns?order=view&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"listColumns"
																	],
																	"query": [
																		{
																			"key": "order",
																			"value": "view"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller set List Columns",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"allowEdit\": \"<boolean>\",\n    \"includeAggregate\": \"<boolean>\",\n    \"aggregateOperator\": \"count\",\n    \"aggregateLabel\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"allowEdit\": \"<boolean>\",\n    \"includeAggregate\": \"<boolean>\",\n    \"aggregateOperator\": \"sum\",\n    \"aggregateLabel\": \"<string>\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/listColumns",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"listColumns"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"allowEdit\": \"<boolean>\",\n    \"includeAggregate\": \"<boolean>\",\n    \"aggregateOperator\": \"count\",\n    \"aggregateLabel\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"keyPath\": \"<string>\",\n    \"allowEdit\": \"<boolean>\",\n    \"includeAggregate\": \"<boolean>\",\n    \"aggregateOperator\": \"sum\",\n    \"aggregateLabel\": \"<string>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/listColumns",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"listColumns"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "duplicatechecker",
											"item": [
												{
													"name": "Form Config Controller set Config Duplicate Checker",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fields\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"action\": \"hard_stop\",\n  \"statuses\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"joinCondition\": \"and\",\n  \"skipNulls\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/duplicatechecker",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"duplicatechecker"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fields\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"action\": \"hard_stop\",\n  \"statuses\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"joinCondition\": \"and\",\n  \"skipNulls\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/duplicatechecker",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"duplicatechecker"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"fields\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"action\": \"warning\",\n    \"statuses\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"joinCondition\": \"and\",\n    \"skipNulls\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller get Duplicate Checker Config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/duplicatechecker?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"duplicatechecker"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/duplicatechecker?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"duplicatechecker"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"fields\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"action\": \"warning\",\n    \"statuses\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"joinCondition\": \"and\",\n    \"skipNulls\": \"<boolean>\"\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller delete Duplicate Checker Config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/duplicatechecker",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"duplicatechecker"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/duplicatechecker",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"duplicatechecker"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "archive",
											"item": [
												{
													"name": "Form Config Controller get Archive Config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/archive?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"archive"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/archive?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"archive"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Form Config Controller set Archive Config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"days\": \"<number>\"\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"days\": \"<number>\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/archive",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"archive"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"statusId\": \"<uuid>\",\n    \"days\": \"<number>\"\n  },\n  {\n    \"statusId\": \"<uuid>\",\n    \"days\": \"<number>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/archive",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"archive"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "plugins",
											"item": [
												{
													"name": "{pluginId}",
													"item": [
														{
															"name": "try",
															"item": [
																{
																	"name": "Legacy Plugin Config Controller plugin Try Config",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"config\": {},\n  \"input\": {},\n  \"documentUrn\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId/try",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"plugins",
																				":pluginId",
																				"try"
																			],
																			"variable": [
																				{
																					"key": "company",
																					"value": "<string>",
																					"description": "(Required) Company **UUID** or **URL Name**"
																				},
																				{
																					"key": "formId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "pluginId",
																					"value": "<string>",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"config\": {},\n  \"input\": {},\n  \"documentUrn\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId/try",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						":company",
																						"forms",
																						":formId",
																						"plugins",
																						":pluginId",
																						"try"
																					],
																					"variable": [
																						{
																							"key": "company"
																						},
																						{
																							"key": "formId"
																						},
																						{
																							"key": "pluginId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"pluginId\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"config\": {}\n  },\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Legacy Plugin Config Controller plugin Config Find One",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"plugins",
																		":pluginId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "pluginId",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"plugins",
																				":pluginId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "pluginId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"pluginId\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"config\": {}\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Legacy Plugin Config Controller update",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"plugins",
																		":pluginId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "pluginId",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"plugins",
																				":pluginId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "pluginId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"pluginId\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"config\": {}\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Legacy Plugin Config Controller delete",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"plugins",
																		":pluginId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "pluginId",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins/:pluginId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"plugins",
																				":pluginId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "pluginId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Legacy Plugin Config Controller plugin Config Find All",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins?pluginId=<string>&draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"plugins"
															],
															"query": [
																{
																	"key": "pluginId",
																	"value": "<string>"
																},
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/plugins?pluginId=<string>&draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"plugins"
																	],
																	"query": [
																		{
																			"key": "pluginId",
																			"value": "<string>"
																		},
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "automations",
											"item": [
												{
													"name": "{automationId}",
													"item": [
														{
															"name": "Retrieves form automation details",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automations/:automationId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automations",
																		":automationId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "automationId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Retrieves form automation details"
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/automations/:automationId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"automations",
																				":automationId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "automationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"trigger\": {\n        \"type\": \"sla-miss\",\n        \"config\": {\n          \"sourceFields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"forAction\": [\n            \"assign\",\n            \"edit-form\"\n          ]\n        }\n      },\n      \"components\": [\n        {\n          \"component\": \"for-each\",\n          \"config\": {\n            \"type\": \"bulk-move-documents\",\n            \"config\": {\n              \"apiCallId\": \"<uuid>\",\n              \"apiCallMachineName\": \"<string>\",\n              \"shouldContinueOnError\": \"<boolean>\",\n              \"outputFieldsVarName\": \"<string>\",\n              \"outputResponseBodyVarName\": \"<string>\",\n              \"outputResponseVarName\": \"<string>\"\n            }\n          },\n          \"uiContext\": {}\n        },\n        {\n          \"component\": \"condition\",\n          \"config\": {\n            \"type\": \"send-sms\",\n            \"config\": {\n              \"apiCallId\": \"<uuid>\",\n              \"apiCallMachineName\": \"<string>\",\n              \"shouldContinueOnError\": \"<boolean>\",\n              \"outputFieldsVarName\": \"<string>\",\n              \"outputResponseBodyVarName\": \"<string>\",\n              \"outputResponseVarName\": \"<string>\"\n            }\n          },\n          \"uiContext\": {}\n        }\n      ]\n    },\n    \"enabled\": \"<boolean>\",\n    \"createdByUsr\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedByUsr\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"description\": \"<string>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    }\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update form automation",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"trigger\": {\n      \"type\": \"sla-miss\",\n      \"config\": {\n        \"sourceFields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"forAction\": [\n          \"create-form\",\n          \"create-form\"\n        ]\n      }\n    },\n    \"components\": [\n      {\n        \"component\": \"for-each\",\n        \"config\": {\n          \"type\": \"generate-pdf\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      },\n      {\n        \"component\": \"if-else\",\n        \"config\": {\n          \"type\": \"bulk-move-documents\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      }\n    ]\n  },\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automations/:automationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automations",
																		":automationId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "automationId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"trigger\": {\n      \"type\": \"sla-miss\",\n      \"config\": {\n        \"sourceFields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"forAction\": [\n          \"create-form\",\n          \"create-form\"\n        ]\n      }\n    },\n    \"components\": [\n      {\n        \"component\": \"for-each\",\n        \"config\": {\n          \"type\": \"generate-pdf\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      },\n      {\n        \"component\": \"if-else\",\n        \"config\": {\n          \"type\": \"bulk-move-documents\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      }\n    ]\n  },\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/automations/:automationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"automations",
																				":automationId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "automationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"trigger\": {\n        \"type\": \"sla-miss\",\n        \"config\": {\n          \"sourceFields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"forAction\": [\n            \"assign\",\n            \"edit-form\"\n          ]\n        }\n      },\n      \"components\": [\n        {\n          \"component\": \"for-each\",\n          \"config\": {\n            \"type\": \"bulk-move-documents\",\n            \"config\": {\n              \"apiCallId\": \"<uuid>\",\n              \"apiCallMachineName\": \"<string>\",\n              \"shouldContinueOnError\": \"<boolean>\",\n              \"outputFieldsVarName\": \"<string>\",\n              \"outputResponseBodyVarName\": \"<string>\",\n              \"outputResponseVarName\": \"<string>\"\n            }\n          },\n          \"uiContext\": {}\n        },\n        {\n          \"component\": \"condition\",\n          \"config\": {\n            \"type\": \"send-sms\",\n            \"config\": {\n              \"apiCallId\": \"<uuid>\",\n              \"apiCallMachineName\": \"<string>\",\n              \"shouldContinueOnError\": \"<boolean>\",\n              \"outputFieldsVarName\": \"<string>\",\n              \"outputResponseBodyVarName\": \"<string>\",\n              \"outputResponseVarName\": \"<string>\"\n            }\n          },\n          \"uiContext\": {}\n        }\n      ]\n    },\n    \"enabled\": \"<boolean>\",\n    \"createdByUsr\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedByUsr\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"description\": \"<string>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    }\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "delete form automation",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automations/:automationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automations",
																		":automationId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "automationId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/automations/:automationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"automations",
																				":automationId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "automationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List all form automations",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/automations?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"automations"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automations?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automations"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Creates new automation for the form",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"config\": {\n    \"trigger\": {\n      \"type\": \"sla-miss\",\n      \"config\": {\n        \"sourceFields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"forAction\": [\n          \"create-form\",\n          \"create-form\"\n        ]\n      }\n    },\n    \"components\": [\n      {\n        \"component\": \"if-else\",\n        \"config\": {\n          \"type\": \"update-status\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      },\n      {\n        \"component\": \"if-else\",\n        \"config\": {\n          \"type\": \"load-documents\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      }\n    ]\n  },\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/automations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"automations"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"config\": {\n    \"trigger\": {\n      \"type\": \"sla-miss\",\n      \"config\": {\n        \"sourceFields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"forAction\": [\n          \"create-form\",\n          \"create-form\"\n        ]\n      }\n    },\n    \"components\": [\n      {\n        \"component\": \"if-else\",\n        \"config\": {\n          \"type\": \"update-status\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      },\n      {\n        \"component\": \"if-else\",\n        \"config\": {\n          \"type\": \"load-documents\",\n          \"config\": {\n            \"apiCallId\": \"<uuid>\",\n            \"apiCallMachineName\": \"<string>\",\n            \"shouldContinueOnError\": \"<boolean>\",\n            \"outputFieldsVarName\": \"<string>\",\n            \"outputResponseBodyVarName\": \"<string>\",\n            \"outputResponseVarName\": \"<string>\"\n          }\n        },\n        \"uiContext\": {}\n      }\n    ]\n  },\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automations"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"trigger\": {\n        \"type\": \"sla-miss\",\n        \"config\": {\n          \"sourceFields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"forAction\": [\n            \"assign\",\n            \"edit-form\"\n          ]\n        }\n      },\n      \"components\": [\n        {\n          \"component\": \"for-each\",\n          \"config\": {\n            \"type\": \"bulk-move-documents\",\n            \"config\": {\n              \"apiCallId\": \"<uuid>\",\n              \"apiCallMachineName\": \"<string>\",\n              \"shouldContinueOnError\": \"<boolean>\",\n              \"outputFieldsVarName\": \"<string>\",\n              \"outputResponseBodyVarName\": \"<string>\",\n              \"outputResponseVarName\": \"<string>\"\n            }\n          },\n          \"uiContext\": {}\n        },\n        {\n          \"component\": \"condition\",\n          \"config\": {\n            \"type\": \"send-sms\",\n            \"config\": {\n              \"apiCallId\": \"<uuid>\",\n              \"apiCallMachineName\": \"<string>\",\n              \"shouldContinueOnError\": \"<boolean>\",\n              \"outputFieldsVarName\": \"<string>\",\n              \"outputResponseBodyVarName\": \"<string>\",\n              \"outputResponseVarName\": \"<string>\"\n            }\n          },\n          \"uiContext\": {}\n        }\n      ]\n    },\n    \"enabled\": \"<boolean>\",\n    \"createdByUsr\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"updatedByUsr\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    },\n    \"description\": \"<string>\",\n    \"creator\": {\n      \"id\": \"<uuid>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"deleted\": \"<boolean>\"\n    }\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "automationLogs",
											"item": [
												{
													"name": "Automation Logs",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/automationLogs?status=loop&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"automationLogs"
															],
															"query": [
																{
																	"key": "status",
																	"value": "loop"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automationLogs?status=loop&offset=<number>&limit=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automationLogs"
																	],
																	"query": [
																		{
																			"key": "status",
																			"value": "loop"
																		},
																		{
																			"key": "offset",
																			"value": "<number>"
																		},
																		{
																			"key": "limit",
																			"value": "<number>",
																			"description": "0 is deprecated and will be replaced by 2000"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "automationFieldInputs",
											"item": [
												{
													"name": "Get available inputs for field set automations.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/automationFieldInputs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"automationFieldInputs"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/automationFieldInputs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"automationFieldInputs"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "placeholders",
											"item": [
												{
													"name": "Get available placeholders for.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/placeholders",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"placeholders"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/placeholders",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"placeholders"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "enabled",
											"item": [
												{
													"name": "Form Disable Delete Controller form Update Enabled By Id",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/enabled",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"enabled"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/enabled",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"enabled"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "generalConfig",
											"item": [
												{
													"name": "Get general form config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/generalConfig?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"generalConfig"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/generalConfig?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"generalConfig"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"abbr\": \"<string>\",\n    \"seq\": \"<number>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cover\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"size\": \"<number>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"enabled\": \"<boolean>\",\n    \"icon\": \"<string>\",\n    \"publicConfig\": {\n      \"enabled\": \"<boolean>\",\n      \"url\": \"<string>\"\n    }\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Set general form config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"abbr\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"cover\": \"<string>\",\n  \"publicConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"url\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/generalConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"generalConfig"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"abbr\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"cover\": \"<string>\",\n  \"publicConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"url\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/generalConfig",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"generalConfig"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"abbr\": \"<string>\",\n    \"seq\": \"<number>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cover\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"size\": \"<number>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"enabled\": \"<boolean>\",\n    \"icon\": \"<string>\",\n    \"publicConfig\": {\n      \"enabled\": \"<boolean>\",\n      \"url\": \"<string>\"\n    }\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "progressTracking",
											"item": [
												{
													"name": "Form Progress Tracking Controller get Progress Tracking Config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/progressTracking?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"progressTracking"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/progressTracking?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"progressTracking"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"fieldIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Form Progress Tracking Controller set Progress Tracking Config",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fieldIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/progressTracking",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"progressTracking"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fieldIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/progressTracking",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"progressTracking"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "labels",
											"item": [
												{
													"name": "{labelId}",
													"item": [
														{
															"name": "Retrieve form label by id",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/labels/:labelId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"labels",
																		":labelId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "labelId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/labels/:labelId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"labels",
																				":labelId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "labelId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"header\": {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      \"description\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ]\n    }\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Updates form label",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"config\": {\n    \"header\": {\n      \"keyPath\": \"<string>\",\n      \"showLabel\": \"<boolean>\"\n    },\n    \"description\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/labels/:labelId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"labels",
																		":labelId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "labelId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"config\": {\n    \"header\": {\n      \"keyPath\": \"<string>\",\n      \"showLabel\": \"<boolean>\"\n    },\n    \"description\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/labels/:labelId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"labels",
																				":labelId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "labelId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"header\": {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      \"description\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ]\n    }\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "delete form label",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/labels/:labelId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"labels",
																		":labelId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "labelId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/labels/:labelId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"labels",
																				":labelId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "labelId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List all form labels",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/labels?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"labels"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/labels?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Create form label",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"config\": {\n    \"header\": {\n      \"keyPath\": \"<string>\",\n      \"showLabel\": \"<boolean>\"\n    },\n    \"description\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/labels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"labels"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"config\": {\n    \"header\": {\n      \"keyPath\": \"<string>\",\n      \"showLabel\": \"<boolean>\"\n    },\n    \"description\": [\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"header\": {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      \"description\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ]\n    }\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "appliedLabels",
											"item": [
												{
													"name": "{appliedLabelId}",
													"item": [
														{
															"name": "Retrieve applied form label by id",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels/:appliedLabelId?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"appliedLabels",
																		":appliedLabelId"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "appliedLabelId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels/:appliedLabelId?draft=<boolean>&showChanges=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"appliedLabels",
																				":appliedLabelId"
																			],
																			"query": [
																				{
																					"key": "draft",
																					"value": "<boolean>",
																					"description": "Specifies if using draft schema"
																				},
																				{
																					"key": "showChanges",
																					"value": "<boolean>",
																					"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "appliedLabelId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"creatorId\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"config\": {\n      \"allowAllComponents\": \"<boolean>\",\n      \"allowAllStatuses\": \"<boolean>\",\n      \"components\": [\n        \"timelines\",\n        \"calendar\"\n      ],\n      \"statusIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update applied form label",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"labelId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"config\": {\n    \"allowAllComponents\": \"<boolean>\",\n    \"allowAllStatuses\": \"<boolean>\",\n    \"components\": [\n      \"tasks\",\n      \"notifications\"\n    ],\n    \"statusIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels/:appliedLabelId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"appliedLabels",
																		":appliedLabelId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "appliedLabelId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"labelId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"config\": {\n    \"allowAllComponents\": \"<boolean>\",\n    \"allowAllStatuses\": \"<boolean>\",\n    \"components\": [\n      \"tasks\",\n      \"notifications\"\n    ],\n    \"statusIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels/:appliedLabelId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"appliedLabels",
																				":appliedLabelId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "appliedLabelId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"header\": {\n        \"keyPath\": \"<string>\",\n        \"showLabel\": \"<boolean>\"\n      },\n      \"description\": [\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        }\n      ]\n    }\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "delete applied form label",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels/:appliedLabelId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"appliedLabels",
																		":appliedLabelId"
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		},
																		{
																			"key": "formId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		},
																		{
																			"key": "appliedLabelId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels/:appliedLabelId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"forms",
																				":formId",
																				"appliedLabels",
																				":appliedLabelId"
																			],
																			"variable": [
																				{
																					"key": "company"
																				},
																				{
																					"key": "formId"
																				},
																				{
																					"key": "appliedLabelId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List all applied form labels",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"appliedLabels"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels?draft=<boolean>&showChanges=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"appliedLabels"
																	],
																	"query": [
																		{
																			"key": "draft",
																			"value": "<boolean>",
																			"description": "Specifies if using draft schema"
																		},
																		{
																			"key": "showChanges",
																			"value": "<boolean>",
																			"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												},
												{
													"name": "Create applied form label",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"labelId\": \"<string>\",\n  \"config\": {\n    \"allowAllComponents\": \"<boolean>\",\n    \"allowAllStatuses\": \"<boolean>\",\n    \"components\": [\n      \"notifications\",\n      \"bp-relationship\"\n    ],\n    \"statusIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"enabled\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId",
																"appliedLabels"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "formId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"labelId\": \"<string>\",\n  \"config\": {\n    \"allowAllComponents\": \"<boolean>\",\n    \"allowAllStatuses\": \"<boolean>\",\n    \"components\": [\n      \"notifications\",\n      \"bp-relationship\"\n    ],\n    \"statusIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"enabled\": false\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/forms/:formId/appliedLabels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"forms",
																		":formId",
																		"appliedLabels"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "formId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"label\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"config\": {\n        \"header\": {\n          \"keyPath\": \"<string>\",\n          \"showLabel\": \"<boolean>\"\n        },\n        \"description\": [\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          },\n          {\n            \"keyPath\": \"<string>\",\n            \"showLabel\": \"<boolean>\"\n          }\n        ]\n      }\n    },\n    \"creatorId\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"config\": {\n      \"allowAllComponents\": \"<boolean>\",\n      \"allowAllStatuses\": \"<boolean>\",\n      \"components\": [\n        \"timelines\",\n        \"calendar\"\n      ],\n      \"statusIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Finds form by id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/forms/:formId?draft=<boolean>&showChanges=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"forms",
														":formId"
													],
													"query": [
														{
															"key": "draft",
															"value": "<boolean>",
															"description": "Specifies if using draft schema"
														},
														{
															"key": "showChanges",
															"value": "<boolean>",
															"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId?draft=<boolean>&showChanges=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId"
															],
															"query": [
																{
																	"key": "draft",
																	"value": "<boolean>",
																	"description": "Specifies if using draft schema"
																},
																{
																	"key": "showChanges",
																	"value": "<boolean>",
																	"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
																}
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "formId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"abbr\": \"<string>\",\n    \"seq\": \"<number>\",\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"icon\": \"<string>\",\n    \"cover\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"size\": \"<number>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"publicConfig\": {\n      \"enabled\": \"<boolean>\",\n      \"url\": \"<string>\"\n    },\n    \"fieldsLayout\": [\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"plain\",\n        \"defaultView\": \"collapsed\",\n        \"pinned\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"grouped\",\n        \"defaultView\": \"expanded\",\n        \"pinned\": \"<boolean>\"\n      }\n    ],\n    \"statusLayout\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"createSender\": {\n      \"type\": \"automation\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"updateSender\": {\n      \"type\": \"api-app\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    }\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Form Controller form Update By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"abbr\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"cover\": \"<string>\",\n  \"fieldsLayout\": [\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"grouped\",\n      \"defaultView\": \"collapsed\",\n      \"pinned\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"plain\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    }\n  ],\n  \"statusLayout\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/forms/:formId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"forms",
														":formId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"abbr\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"cover\": \"<string>\",\n  \"fieldsLayout\": [\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"grouped\",\n      \"defaultView\": \"collapsed\",\n      \"pinned\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"plain\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    }\n  ],\n  \"statusLayout\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "formId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Form Disable Delete Controller form Delete By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/:company/forms/:formId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"forms",
														":formId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "formId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/forms/:formId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"forms",
																":formId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "formId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Returns all forms for company",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:company/forms?sort=<string>&sort=<string>&search=<string>&enabled=<boolean>&offset=<number>&limit=<number>&draft=<boolean>&showChanges=<boolean>&export=json&isUpdateImportExport=true&exportOnlyFieldIds=<string>&exportOnlyFieldIds=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"forms"
											],
											"query": [
												{
													"key": "sort",
													"value": "<string>",
													"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "enabled",
													"value": "<boolean>"
												},
												{
													"key": "offset",
													"value": "<number>"
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "0 is deprecated and will be replaced by 2000"
												},
												{
													"key": "draft",
													"value": "<boolean>",
													"description": "Specifies if using draft schema"
												},
												{
													"key": "showChanges",
													"value": "<boolean>",
													"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
												},
												{
													"key": "export",
													"value": "json",
													"description": "Format to download output as a file"
												},
												{
													"key": "isUpdateImportExport",
													"value": "true",
													"description": "Flag indicating if data for export/import is meant to be used for updating records"
												},
												{
													"key": "exportOnlyFieldIds",
													"value": "<string>",
													"description": "Use only these field ids for export"
												},
												{
													"key": "exportOnlyFieldIds",
													"value": "<string>",
													"description": "Use only these field ids for export"
												}
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/forms?sort=<string>&search=<string>&enabled=<boolean>&offset=<number>&limit=<number>&draft=<boolean>&showChanges=<boolean>&export=json&isUpdateImportExport=true&exportOnlyFieldIds=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"forms"
													],
													"query": [
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "search",
															"value": "<string>"
														},
														{
															"key": "enabled",
															"value": "<boolean>"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														},
														{
															"key": "draft",
															"value": "<boolean>",
															"description": "Specifies if using draft schema"
														},
														{
															"key": "showChanges",
															"value": "<boolean>",
															"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
														},
														{
															"key": "export",
															"value": "json",
															"description": "Format to download output as a file"
														},
														{
															"key": "isUpdateImportExport",
															"value": "true",
															"description": "Flag indicating if data for export/import is meant to be used for updating records"
														},
														{
															"key": "exportOnlyFieldIds",
															"value": "<string>",
															"description": "Use only these field ids for export"
														}
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										}
									]
								},
								{
									"name": "Creates new form for company",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"abbr\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"cover\": \"<string>\",\n  \"fieldsLayout\": [\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"grouped\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"plain\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    }\n  ],\n  \"statusLayout\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:company/forms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"forms"
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"abbr\": \"<string>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"cover\": \"<string>\",\n  \"fieldsLayout\": [\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"grouped\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"header\": {\n        \"fields\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ]\n      },\n      \"body\": [\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        }\n      ],\n      \"title\": \"<string>\",\n      \"collapsable\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"style\": \"plain\",\n      \"defaultView\": \"expanded\",\n      \"pinned\": \"<boolean>\"\n    }\n  ],\n  \"statusLayout\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/forms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"forms"
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"abbr\": \"<string>\",\n    \"seq\": \"<number>\",\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"icon\": \"<string>\",\n    \"cover\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"size\": \"<number>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"publicConfig\": {\n      \"enabled\": \"<boolean>\",\n      \"url\": \"<string>\"\n    },\n    \"fieldsLayout\": [\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"plain\",\n        \"defaultView\": \"collapsed\",\n        \"pinned\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"grouped\",\n        \"defaultView\": \"expanded\",\n        \"pinned\": \"<boolean>\"\n      }\n    ],\n    \"statusLayout\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"createSender\": {\n      \"type\": \"automation\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"updateSender\": {\n      \"type\": \"api-app\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    }\n  },\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "formsShort",
							"item": [
								{
									"name": "Returns all forms for company (short)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:company/formsShort?sort=<string>&sort=<string>&search=<string>&enabled=<boolean>&offset=<number>&limit=<number>&draft=<boolean>&showChanges=<boolean>&export=json&isUpdateImportExport=true&exportOnlyFieldIds=<string>&exportOnlyFieldIds=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"formsShort"
											],
											"query": [
												{
													"key": "sort",
													"value": "<string>",
													"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "enabled",
													"value": "<boolean>"
												},
												{
													"key": "offset",
													"value": "<number>"
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "0 is deprecated and will be replaced by 2000"
												},
												{
													"key": "draft",
													"value": "<boolean>",
													"description": "Specifies if using draft schema"
												},
												{
													"key": "showChanges",
													"value": "<boolean>",
													"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
												},
												{
													"key": "export",
													"value": "json",
													"description": "Format to download output as a file"
												},
												{
													"key": "isUpdateImportExport",
													"value": "true",
													"description": "Flag indicating if data for export/import is meant to be used for updating records"
												},
												{
													"key": "exportOnlyFieldIds",
													"value": "<string>",
													"description": "Use only these field ids for export"
												},
												{
													"key": "exportOnlyFieldIds",
													"value": "<string>",
													"description": "Use only these field ids for export"
												}
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/formsShort?sort=<string>&search=<string>&enabled=<boolean>&offset=<number>&limit=<number>&draft=<boolean>&showChanges=<boolean>&export=json&isUpdateImportExport=true&exportOnlyFieldIds=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"formsShort"
													],
													"query": [
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "search",
															"value": "<string>"
														},
														{
															"key": "enabled",
															"value": "<boolean>"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														},
														{
															"key": "draft",
															"value": "<boolean>",
															"description": "Specifies if using draft schema"
														},
														{
															"key": "showChanges",
															"value": "<boolean>",
															"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
														},
														{
															"key": "export",
															"value": "json",
															"description": "Format to download output as a file"
														},
														{
															"key": "isUpdateImportExport",
															"value": "true",
															"description": "Flag indicating if data for export/import is meant to be used for updating records"
														},
														{
															"key": "exportOnlyFieldIds",
															"value": "<string>",
															"description": "Use only these field ids for export"
														}
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "actions",
							"item": [
								{
									"name": "{actionId}",
									"item": [
										{
											"name": "assign",
											"item": [
												{
													"name": "Override roles to action",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/actions/:actionId/assign",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"actions",
																":actionId",
																"assign"
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "actionId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"roleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/actions/:actionId/assign",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"actions",
																		":actionId",
																		"assign"
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "actionId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Updates action",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"statusId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"view\",\n  \"config\": {\n    \"targetStatusId\": \"<uuid>\",\n    \"assignmentType\": \"none\",\n    \"direction\": \"backward\",\n    \"return\": \"<boolean>\"\n  },\n  \"machineName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/actions/:actionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"actions",
														":actionId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "actionId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"statusId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"view\",\n  \"config\": {\n    \"targetStatusId\": \"<uuid>\",\n    \"assignmentType\": \"none\",\n    \"direction\": \"backward\",\n    \"return\": \"<boolean>\"\n  },\n  \"machineName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/actions/:actionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"actions",
																":actionId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "actionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"type\": \"dynamic\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"targetStatusId\": \"<uuid>\",\n      \"assignmentType\": \"none\",\n      \"direction\": \"backward\",\n      \"return\": \"<boolean>\"\n    },\n    \"machineName\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Action Controller find Actions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:company/actions?type=view&statusId=<uuid>&formId=<uuid>&documentId=<uuid>&roleId=<uuid>&machineName=<string>&draft=<boolean>&showChanges=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"actions"
											],
											"query": [
												{
													"key": "type",
													"value": "view",
													"description": "Shows only actions with specified type."
												},
												{
													"key": "statusId",
													"value": "<uuid>"
												},
												{
													"key": "formId",
													"value": "<uuid>"
												},
												{
													"key": "documentId",
													"value": "<uuid>"
												},
												{
													"key": "roleId",
													"value": "<uuid>"
												},
												{
													"key": "machineName",
													"value": "<string>"
												},
												{
													"key": "draft",
													"value": "<boolean>",
													"description": "Specifies if using draft schema"
												},
												{
													"key": "showChanges",
													"value": "<boolean>",
													"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
												}
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/actions?type=view&statusId=<uuid>&formId=<uuid>&documentId=<uuid>&roleId=<uuid>&machineName=<string>&draft=<boolean>&showChanges=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"actions"
													],
													"query": [
														{
															"key": "type",
															"value": "view",
															"description": "Shows only actions with specified type."
														},
														{
															"key": "statusId",
															"value": "<uuid>"
														},
														{
															"key": "formId",
															"value": "<uuid>"
														},
														{
															"key": "documentId",
															"value": "<uuid>"
														},
														{
															"key": "roleId",
															"value": "<uuid>"
														},
														{
															"key": "machineName",
															"value": "<string>"
														},
														{
															"key": "draft",
															"value": "<boolean>",
															"description": "Specifies if using draft schema"
														},
														{
															"key": "showChanges",
															"value": "<boolean>",
															"description": "If enabled, includes `changes` object, that shows changes between published and draft versions:\n      <br>```changes: { hasChanges: true, diff: DeltaObject }```\n      <br>For more information about **DeltaObject** format, see [Specification](https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md \"DeltaObject Specification\")\n      "
														}
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										}
									]
								},
								{
									"name": "Creates any action",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"assign\",\n  \"statusId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"targetStatusId\": \"<uuid>\",\n    \"assignmentType\": \"individual\",\n    \"direction\": \"backward\",\n    \"return\": \"<boolean>\"\n  },\n  \"machineName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:company/actions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"actions"
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"assign\",\n  \"statusId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"targetStatusId\": \"<uuid>\",\n    \"assignmentType\": \"individual\",\n    \"direction\": \"backward\",\n    \"return\": \"<boolean>\"\n  },\n  \"machineName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/actions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"actions"
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"type\": \"dynamic\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"targetStatusId\": \"<uuid>\",\n      \"assignmentType\": \"none\",\n      \"direction\": \"backward\",\n      \"return\": \"<boolean>\"\n    },\n    \"machineName\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "action",
							"item": [
								{
									"name": "{actionId}",
									"item": [
										{
											"name": "Hard delete dynamic action",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/:company/action/:actionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"action",
														":actionId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "actionId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/action/:actionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"action",
																":actionId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "actionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "fields",
							"item": [
								{
									"name": "{fieldId}",
									"item": [
										{
											"name": "configUsage",
											"item": [
												{
													"name": "Find field usage in configurations",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/fields/:fieldId/configUsage?only=ref-table.insert.sublabel&only=date.min.left&except=ref-table.insert.sublabel&except=date.min.left",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"fields",
																":fieldId",
																"configUsage"
															],
															"query": [
																{
																	"key": "only",
																	"value": "ref-table.insert.sublabel"
																},
																{
																	"key": "only",
																	"value": "date.min.left"
																},
																{
																	"key": "except",
																	"value": "ref-table.insert.sublabel"
																},
																{
																	"key": "except",
																	"value": "date.min.left"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																},
																{
																	"key": "fieldId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/fields/:fieldId/configUsage?only=date.min.left&except=date.min.left",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"fields",
																		":fieldId",
																		"configUsage"
																	],
																	"query": [
																		{
																			"key": "only",
																			"value": "date.min.left"
																		},
																		{
																			"key": "except",
																			"value": "date.min.left"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		},
																		{
																			"key": "fieldId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "library",
							"item": [
								{
									"name": "documents",
									"item": [
										{
											"name": "count",
											"item": [
												{
													"name": "Count documents",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/library/documents/count?source=completeTasks&globalSearch=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"library",
																"documents",
																"count"
															],
															"query": [
																{
																	"key": "source",
																	"value": "completeTasks"
																},
																{
																	"key": "globalSearch",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/library/documents/count?source=completeTasks&globalSearch=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"library",
																		"documents",
																		"count"
																	],
																	"query": [
																		{
																			"key": "source",
																			"value": "completeTasks"
																		},
																		{
																			"key": "globalSearch",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Find all documents based on source and component",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/library/documents?globalSearch=<string>&sort=<string>&sort=<string>&from=completeTasks&component=notifications&includeDescription=<boolean>&extra=<string>&extra=<string>&offset=<number>&limit=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"library",
														"documents"
													],
													"query": [
														{
															"key": "globalSearch",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
														},
														{
															"key": "from",
															"value": "completeTasks"
														},
														{
															"key": "component",
															"value": "notifications",
															"description": "This is no longer available and just ignored"
														},
														{
															"key": "includeDescription",
															"value": "<boolean>",
															"description": "Specifies if we should include \"Cards\" by default. This is \"true\" by default for compatibility reasons"
														},
														{
															"key": "extra",
															"value": "<string>",
															"description": "Display items by keyPaths to be added"
														},
														{
															"key": "extra",
															"value": "<string>",
															"description": "Display items by keyPaths to be added"
														},
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filters\": {\n    \"enim_6\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/library/documents?globalSearch=<string>&sort=<string>&from=completeTasks&component=notifications&includeDescription=<boolean>&extra=<string>&offset=<number>&limit=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"library",
																"documents"
															],
															"query": [
																{
																	"key": "globalSearch",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Specify sorting rules. Set property keys which will be used for sorting. Specify sorting direction (asc or desc)\n      separated by \"|\", for example: sort=name|asc or sort=seq|desc."
																},
																{
																	"key": "from",
																	"value": "completeTasks"
																},
																{
																	"key": "component",
																	"value": "notifications",
																	"description": "This is no longer available and just ignored"
																},
																{
																	"key": "includeDescription",
																	"value": "<boolean>",
																	"description": "Specifies if we should include \"Cards\" by default. This is \"true\" by default for compatibility reasons"
																},
																{
																	"key": "extra",
																	"value": "<string>",
																	"description": "Display items by keyPaths to be added"
																},
																{
																	"key": "offset",
																	"value": "<number>"
																},
																{
																	"key": "limit",
																	"value": "<number>",
																	"description": "0 is deprecated and will be replaced by 2000"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "genericFilters",
									"item": [
										{
											"name": "Get data to build filter fields (fields and automation)",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/library/genericFilters?ids=<string>&ids=<string>&preloadItemsCount=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"library",
														"genericFilters"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "preloadItemsCount",
															"value": "<number>",
															"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/library/genericFilters?ids=<string>&preloadItemsCount=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"library",
																"genericFilters"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>"
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>",
																	"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading."
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"fields\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"date\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"required\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"fx\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"readonly\",\n        \"maxAccessType\": \"hidden\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"automation\",\n          \"constraint\"\n        ],\n        \"confidential\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"array\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"readonly\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"ref-table\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"hidden\",\n        \"maxAccessType\": \"readonly\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"automation\",\n          \"constraint\"\n        ],\n        \"confidential\": \"<boolean>\"\n      }\n    ],\n    \"automations\": [\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"field-update\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"if-else\",\n              \"config\": {\n                \"type\": \"copy-value-field-update-target\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"autopopulate-field\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"enabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"field-update\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"update-filter-input\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"consolidate-table\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "urns",
							"item": [
								{
									"name": "filterInputs",
									"item": [
										{
											"name": "one",
											"item": [
												{
													"name": "Get one filter input by keyPath",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/filterInputs/one?residenceType=dt&residenceIds=<uuid>&residenceIds=<uuid>&keyPath=<string>&operator=not-equal&preloadItemsCount=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"filterInputs",
																"one"
															],
															"query": [
																{
																	"key": "residenceType",
																	"value": "dt"
																},
																{
																	"key": "residenceIds",
																	"value": "<uuid>"
																},
																{
																	"key": "residenceIds",
																	"value": "<uuid>"
																},
																{
																	"key": "keyPath",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "operator",
																	"value": "not-equal"
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/urns/filterInputs/one?residenceType=dt&residenceIds=<uuid>&keyPath=<string>&operator=not-equal&preloadItemsCount=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"urns",
																		"filterInputs",
																		"one"
																	],
																	"query": [
																		{
																			"key": "residenceType",
																			"value": "dt"
																		},
																		{
																			"key": "residenceIds",
																			"value": "<uuid>"
																		},
																		{
																			"key": "keyPath",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "operator",
																			"value": "not-equal"
																		},
																		{
																			"key": "preloadItemsCount",
																			"value": "<number>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"input\": {\n      \"id\": \"<string>\",\n      \"label\": \"<string>\",\n      \"inputConfig\": {\n        \"type\": \"copy-value\",\n        \"config\": {\n          \"items\": {\n            \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n          },\n          \"maxItems\": \"<number>\"\n        }\n      },\n      \"accessType\": \"readonly\",\n      \"hint\": \"<string>\",\n      \"hintExpanded\": \"<boolean>\",\n      \"mobileConfig\": {\n        \"type\": \"trigger-btn\",\n        \"config\": {\n          \"widget\": {\n            \"items\": [\n              {\n                \"slot\": \"<string>\",\n                \"columnId\": \"<uuid>\"\n              },\n              {\n                \"slot\": \"<string>\",\n                \"columnId\": \"<uuid>\"\n              }\n            ],\n            \"enabled\": \"<boolean>\",\n            \"headers\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"configName\": \"<string>\",\n      \"overriddenAccessType\": \"readwrite\",\n      \"maxAccessType\": \"required\",\n      \"defaultValue\": {},\n      \"requiresFieldData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"reloadOnChange\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"flags\": [\n        \"automation\",\n        \"automation\"\n      ],\n      \"confidential\": \"<boolean>\"\n    },\n    \"automations\": [\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"field-update\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"autopopulate-field\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"if-else\",\n              \"config\": {\n                \"type\": \"set-table-rows-count\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"trigger-btn\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"template-copy\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"if-else\",\n              \"config\": {\n                \"type\": \"set-value\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "conditionValue",
											"item": [
												{
													"name": "Get one filter input for given keyPath and operator",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/filterInputs/conditionValue?residenceType=dt&residenceIds=<uuid>&residenceIds=<uuid>&keyPath=<string>&operator=not-equal&preloadItemsCount=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"filterInputs",
																"conditionValue"
															],
															"query": [
																{
																	"key": "residenceType",
																	"value": "dt"
																},
																{
																	"key": "residenceIds",
																	"value": "<uuid>"
																},
																{
																	"key": "residenceIds",
																	"value": "<uuid>"
																},
																{
																	"key": "keyPath",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "operator",
																	"value": "not-equal",
																	"description": "(Required) "
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/urns/filterInputs/conditionValue?residenceType=dt&residenceIds=<uuid>&keyPath=<string>&operator=not-equal&preloadItemsCount=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"urns",
																		"filterInputs",
																		"conditionValue"
																	],
																	"query": [
																		{
																			"key": "residenceType",
																			"value": "dt"
																		},
																		{
																			"key": "residenceIds",
																			"value": "<uuid>"
																		},
																		{
																			"key": "keyPath",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "operator",
																			"value": "not-equal",
																			"description": "(Required) "
																		},
																		{
																			"key": "preloadItemsCount",
																			"value": "<number>"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"input\": {\n      \"id\": \"<string>\",\n      \"label\": \"<string>\",\n      \"inputConfig\": {\n        \"type\": \"copy-value\",\n        \"config\": {\n          \"items\": {\n            \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n          },\n          \"maxItems\": \"<number>\"\n        }\n      },\n      \"accessType\": \"readonly\",\n      \"hint\": \"<string>\",\n      \"hintExpanded\": \"<boolean>\",\n      \"mobileConfig\": {\n        \"type\": \"trigger-btn\",\n        \"config\": {\n          \"widget\": {\n            \"items\": [\n              {\n                \"slot\": \"<string>\",\n                \"columnId\": \"<uuid>\"\n              },\n              {\n                \"slot\": \"<string>\",\n                \"columnId\": \"<uuid>\"\n              }\n            ],\n            \"enabled\": \"<boolean>\",\n            \"headers\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"configName\": \"<string>\",\n      \"overriddenAccessType\": \"readwrite\",\n      \"maxAccessType\": \"required\",\n      \"defaultValue\": {},\n      \"requiresFieldData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"reloadOnChange\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"flags\": [\n        \"automation\",\n        \"automation\"\n      ],\n      \"confidential\": \"<boolean>\"\n    },\n    \"automations\": [\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"field-update\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"autopopulate-field\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"if-else\",\n              \"config\": {\n                \"type\": \"set-table-rows-count\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"trigger-btn\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"template-copy\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"if-else\",\n              \"config\": {\n                \"type\": \"set-value\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get filter inputs by keyPaths",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/urns/filterInputs?residenceType=dt&residenceIds=<uuid>&residenceIds=<uuid>&keyPaths=<string>&keyPaths=<string>&preloadItemsCount=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"urns",
														"filterInputs"
													],
													"query": [
														{
															"key": "residenceType",
															"value": "dt"
														},
														{
															"key": "residenceIds",
															"value": "<uuid>"
														},
														{
															"key": "residenceIds",
															"value": "<uuid>"
														},
														{
															"key": "keyPaths",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "keyPaths",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "preloadItemsCount",
															"value": "<number>"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/filterInputs?residenceType=dt&residenceIds=<uuid>&keyPaths=<string>&preloadItemsCount=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"filterInputs"
															],
															"query": [
																{
																	"key": "residenceType",
																	"value": "dt"
																},
																{
																	"key": "residenceIds",
																	"value": "<uuid>"
																},
																{
																	"key": "keyPaths",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"inputs\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"ref-table\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"hidden\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"enum\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"readonly\",\n        \"maxAccessType\": \"readonly\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"constraint\",\n          \"constraint\"\n        ],\n        \"confidential\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"time\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"readwrite\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"copy-value\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"required\",\n        \"maxAccessType\": \"required\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"generated\",\n          \"automation\"\n        ],\n        \"confidential\": \"<boolean>\"\n      }\n    ],\n    \"automations\": {\n      \"fugiat_149\": {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"field-update\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"compute-value\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"filter-enum\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      }\n    }\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "inputForm",
									"item": [
										{
											"name": "Get all information needed to show form",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/urns/inputForm?urn=<string>&residence=<string>&id=<uuid>&metaKeyPaths=<string>&metaKeyPaths=<string>&preloadItemsCount=<number>&includeDebugName=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"urns",
														"inputForm"
													],
													"query": [
														{
															"key": "urn",
															"value": "<string>",
															"description": "Alternative for id+residence"
														},
														{
															"key": "residence",
															"value": "<string>",
															"description": "Field Residence, like form.UUID or dt.UUID or user"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Id of document/user or dt record"
														},
														{
															"key": "metaKeyPaths",
															"value": "<string>",
															"description": "Return metadata for specified keys only"
														},
														{
															"key": "metaKeyPaths",
															"value": "<string>",
															"description": "Return metadata for specified keys only"
														},
														{
															"key": "preloadItemsCount",
															"value": "<number>",
															"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading. Default: null"
														},
														{
															"key": "includeDebugName",
															"value": "<boolean>",
															"description": "Pass \"true\" to include debug description into automation names"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/inputForm?urn=<string>&residence=<string>&id=<uuid>&metaKeyPaths=<string>&preloadItemsCount=<number>&includeDebugName=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"inputForm"
															],
															"query": [
																{
																	"key": "urn",
																	"value": "<string>",
																	"description": "Alternative for id+residence"
																},
																{
																	"key": "residence",
																	"value": "<string>",
																	"description": "Field Residence, like form.UUID or dt.UUID or user"
																},
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "Id of document/user or dt record"
																},
																{
																	"key": "metaKeyPaths",
																	"value": "<string>",
																	"description": "Return metadata for specified keys only"
																},
																{
																	"key": "preloadItemsCount",
																	"value": "<number>",
																	"description": "Specify number of items to preload in enums (when enum is not static). Pass 0 or null to skip preloading. Default: null"
																},
																{
																	"key": "includeDebugName",
																	"value": "<boolean>",
																	"description": "Pass \"true\" to include debug description into automation names"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"residence\": \"<string>\",\n    \"inputFields\": [\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"autopopulated\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"readwrite\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"copy-value\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"readonly\",\n        \"maxAccessType\": \"required\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"automation\",\n          \"automation\"\n        ],\n        \"confidential\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"label\": \"<string>\",\n        \"inputConfig\": {\n          \"type\": \"table\",\n          \"config\": {\n            \"items\": {\n              \"value\": \"<Circular reference to #/components/schemas/InputConfigDto detected>\"\n            },\n            \"maxItems\": \"<number>\"\n          }\n        },\n        \"accessType\": \"readonly\",\n        \"hint\": \"<string>\",\n        \"hintExpanded\": \"<boolean>\",\n        \"mobileConfig\": {\n          \"type\": \"table\",\n          \"config\": {\n            \"widget\": {\n              \"items\": [\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                },\n                {\n                  \"slot\": \"<string>\",\n                  \"columnId\": \"<uuid>\"\n                }\n              ],\n              \"enabled\": \"<boolean>\",\n              \"headers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        },\n        \"configName\": \"<string>\",\n        \"overriddenAccessType\": \"readonly\",\n        \"maxAccessType\": \"required\",\n        \"defaultValue\": {},\n        \"requiresFieldData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"reloadOnChange\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"flags\": [\n          \"constraint\",\n          \"automation\"\n        ],\n        \"confidential\": \"<boolean>\"\n      }\n    ],\n    \"automations\": [\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"trigger-btn\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"autopopulate-field\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"set-table-rows-count\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"disabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"config\": {\n          \"trigger\": {\n            \"type\": \"field-update\",\n            \"config\": {\n              \"keyPaths\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"skipOnLoad\": \"<boolean>\"\n            }\n          },\n          \"components\": [\n            {\n              \"component\": \"condition\",\n              \"config\": {\n                \"type\": \"compute-value\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"enabled\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            },\n            {\n              \"component\": \"action\",\n              \"config\": {\n                \"type\": \"show-confirmation\",\n                \"config\": {\n                  \"actionId\": \"<uuid>\",\n                  \"permission\": \"hidden\",\n                  \"disabledMessage\": \"<string>\"\n                }\n              },\n              \"uiContext\": {}\n            }\n          ]\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"creator\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        }\n      }\n    ],\n    \"layout\": [\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"grouped\",\n        \"defaultView\": \"collapsed\",\n        \"pinned\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"header\": {\n          \"fields\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ]\n        },\n        \"body\": [\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          },\n          {\n            \"fields\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ]\n          }\n        ],\n        \"title\": \"<string>\",\n        \"collapsable\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"style\": \"plain\",\n        \"defaultView\": \"collapsed\",\n        \"pinned\": \"<boolean>\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\",\n    \"fields\": {\n      \"data\": {\n        \"nisie\": {},\n        \"aute6\": {}\n      },\n      \"meta\": {\n        \"magna22\": {},\n        \"irure_a\": {}\n      }\n    },\n    \"meta\": [\n      {\n        \"slot\": \"<string>\",\n        \"type\": \"changed-by\",\n        \"data\": {\n          \"type\": \"dt\",\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"icon\": \"<uuid>\"\n        },\n        \"src\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"slot\": \"<string>\",\n        \"type\": \"progress\",\n        \"data\": {\n          \"type\": \"form\",\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"icon\": \"<uuid>\"\n        },\n        \"src\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"verifiedContacts\": [\n      {\n        \"value\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"user\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"verifiedAt\": \"<dateTime>\"\n      },\n      {\n        \"value\": \"<string>\",\n        \"keyPath\": \"<string>\",\n        \"user\": {\n          \"id\": \"<uuid>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"avatar\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"deleted\": \"<boolean>\"\n        },\n        \"verifiedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "export",
									"item": [
										{
											"name": "Exports URNs to a file",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"residenceType\": \"dt\",\n  \"residenceIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"from\": \"<string>\",\n  \"globalSearch\": \"<string>\",\n  \"keyPaths\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"keyPathsAuto\": \"<boolean>\",\n  \"filters\": {\n    \"velitc\": {},\n    \"ad_e\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/urns/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"urns",
														"export"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"residenceType\": \"dt\",\n  \"residenceIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"from\": \"<string>\",\n  \"globalSearch\": \"<string>\",\n  \"keyPaths\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"keyPathsAuto\": \"<boolean>\",\n  \"filters\": {\n    \"velitc\": {},\n    \"ad_e\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"export"
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "import",
									"item": [
										{
											"name": "fromFile",
											"item": [
												{
													"name": "streamResponse",
													"item": [
														{
															"name": "Imports records from a file and streams response to make connection persistent",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/urns/import/fromFile/streamResponse?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"urns",
																		"import",
																		"fromFile",
																		"streamResponse"
																	],
																	"query": [
																		{
																			"key": "residenceType",
																			"value": "dt",
																			"description": "(Required) "
																		},
																		{
																			"key": "residenceId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "Applies to documents case"
																		},
																		{
																			"key": "portalId",
																			"value": "<uuid>",
																			"description": "Applies to users case"
																		}
																	],
																	"variable": [
																		{
																			"key": "company",
																			"value": "<string>",
																			"description": "(Required) Company **UUID** or **URL Name**"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:company/urns/import/fromFile/streamResponse?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":company",
																				"urns",
																				"import",
																				"fromFile",
																				"streamResponse"
																			],
																			"query": [
																				{
																					"key": "residenceType",
																					"value": "dt",
																					"description": "(Required) "
																				},
																				{
																					"key": "residenceId",
																					"value": "<uuid>"
																				},
																				{
																					"key": "statusId",
																					"value": "<uuid>",
																					"description": "Applies to documents case"
																				},
																				{
																					"key": "portalId",
																					"value": "<uuid>",
																					"description": "Applies to users case"
																				}
																			],
																			"variable": [
																				{
																					"key": "company"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"qty\": \"<number>\",\n    \"lastItem\": {}\n  },\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Imports records from a file",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/import/fromFile?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"import",
																"fromFile"
															],
															"query": [
																{
																	"key": "residenceType",
																	"value": "dt",
																	"description": "(Required) "
																},
																{
																	"key": "residenceId",
																	"value": "<uuid>"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "Applies to documents case"
																},
																{
																	"key": "portalId",
																	"value": "<uuid>",
																	"description": "Applies to users case"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/urns/import/fromFile?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"urns",
																		"import",
																		"fromFile"
																	],
																	"query": [
																		{
																			"key": "residenceType",
																			"value": "dt",
																			"description": "(Required) "
																		},
																		{
																			"key": "residenceId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "Applies to documents case"
																		},
																		{
																			"key": "portalId",
																			"value": "<uuid>",
																			"description": "Applies to users case"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"qty\": \"<number>\",\n    \"lastItem\": {}\n  },\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "createTemplate",
											"item": [
												{
													"name": "Generates template file to import URNs",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/import/createTemplate?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"import",
																"createTemplate"
															],
															"query": [
																{
																	"key": "residenceType",
																	"value": "dt",
																	"description": "(Required) "
																},
																{
																	"key": "residenceId",
																	"value": "<uuid>"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "Applies to documents case"
																},
																{
																	"key": "portalId",
																	"value": "<uuid>",
																	"description": "Applies to users case"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:company/urns/import/createTemplate?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"urns",
																		"import",
																		"createTemplate"
																	],
																	"query": [
																		{
																			"key": "residenceType",
																			"value": "dt",
																			"description": "(Required) "
																		},
																		{
																			"key": "residenceId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "Applies to documents case"
																		},
																		{
																			"key": "portalId",
																			"value": "<uuid>",
																			"description": "Applies to users case"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "updateTemplate",
											"item": [
												{
													"name": "Generates template file to import URNs",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"from\": \"<string>\",\n  \"globalSearch\": \"<string>\",\n  \"filters\": {\n    \"dolore_1\": {},\n    \"esse54\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/import/updateTemplate?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"import",
																"updateTemplate"
															],
															"query": [
																{
																	"key": "residenceType",
																	"value": "dt",
																	"description": "(Required) "
																},
																{
																	"key": "residenceId",
																	"value": "<uuid>"
																},
																{
																	"key": "statusId",
																	"value": "<uuid>",
																	"description": "Applies to documents case"
																},
																{
																	"key": "portalId",
																	"value": "<uuid>",
																	"description": "Applies to users case"
																}
															],
															"variable": [
																{
																	"key": "company",
																	"value": "<string>",
																	"description": "(Required) Company **UUID** or **URL Name**"
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"from\": \"<string>\",\n  \"globalSearch\": \"<string>\",\n  \"filters\": {\n    \"dolore_1\": {},\n    \"esse54\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:company/urns/import/updateTemplate?residenceType=dt&residenceId=<uuid>&statusId=<uuid>&portalId=<uuid>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":company",
																		"urns",
																		"import",
																		"updateTemplate"
																	],
																	"query": [
																		{
																			"key": "residenceType",
																			"value": "dt",
																			"description": "(Required) "
																		},
																		{
																			"key": "residenceId",
																			"value": "<uuid>"
																		},
																		{
																			"key": "statusId",
																			"value": "<uuid>",
																			"description": "Applies to documents case"
																		},
																		{
																			"key": "portalId",
																			"value": "<uuid>",
																			"description": "Applies to users case"
																		}
																	],
																	"variable": [
																		{
																			"key": "company"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "save",
									"item": [
										{
											"name": "Saves URN to database",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"voluptate_043\": {}\n  },\n  \"meta\": {\n    \"magna_6\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/urns/save?urn=<string>&residence=<string>&id=<uuid>&editSessionId=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"urns",
														"save"
													],
													"query": [
														{
															"key": "urn",
															"value": "<string>",
															"description": "Alternative for id+residence"
														},
														{
															"key": "residence",
															"value": "<string>",
															"description": "Field Residence, like form.UUID or dt.UUID or user"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Id of document/user or dt record"
														},
														{
															"key": "editSessionId",
															"value": "<uuid>",
															"description": "EditSessionId in case there is some resources to commit during action"
														}
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"data\": {\n    \"voluptate_043\": {}\n  },\n  \"meta\": {\n    \"magna_6\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/urns/save?urn=<string>&residence=<string>&id=<uuid>&editSessionId=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"urns",
																"save"
															],
															"query": [
																{
																	"key": "urn",
																	"value": "<string>",
																	"description": "Alternative for id+residence"
																},
																{
																	"key": "residence",
																	"value": "<string>",
																	"description": "Field Residence, like form.UUID or dt.UUID or user"
																},
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "Id of document/user or dt record"
																},
																{
																	"key": "editSessionId",
																	"value": "<uuid>",
																	"description": "EditSessionId in case there is some resources to commit during action"
																}
															],
															"variable": [
																{
																	"key": "company"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"urn\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "apiApp",
							"item": [
								{
									"name": "{apiAppId}",
									"item": [
										{
											"name": "Update API App",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authType\": \"SecretKey\",\n  \"authConfig\": {\n    \"secretKey\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiApp/:apiAppId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiApp",
														":apiAppId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "apiAppId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"authType\": \"SecretKey\",\n  \"authConfig\": {\n    \"secretKey\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/apiApp/:apiAppId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"apiApp",
																":apiAppId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "apiAppId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"createdBy\": {\n      \"type\": \"automation\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"updatedBy\": {\n      \"type\": \"user\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Get API App",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiApp/:apiAppId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiApp",
														":apiAppId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "apiAppId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/apiApp/:apiAppId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"apiApp",
																":apiAppId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "apiAppId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"createdBy\": {\n      \"type\": \"automation\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"updatedBy\": {\n      \"type\": \"user\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Delete API App",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiApp/:apiAppId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiApp",
														":apiAppId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "apiAppId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/apiApp/:apiAppId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"apiApp",
																":apiAppId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "apiAppId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List API Apps",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:company/apiApp?offset=<number>&limit=<number>&ids=<uuid>&ids=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"apiApp"
											],
											"query": [
												{
													"key": "offset",
													"value": "<number>"
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "0 is deprecated and will be replaced by 2000"
												},
												{
													"key": "ids",
													"value": "<uuid>"
												},
												{
													"key": "ids",
													"value": "<uuid>"
												}
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiApp?offset=<number>&limit=<number>&ids=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiApp"
													],
													"query": [
														{
															"key": "offset",
															"value": "<number>"
														},
														{
															"key": "limit",
															"value": "<number>",
															"description": "0 is deprecated and will be replaced by 2000"
														},
														{
															"key": "ids",
															"value": "<uuid>"
														}
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										}
									]
								},
								{
									"name": "Create API App",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"authType\": \"SecretKey\",\n  \"authConfig\": {\n    \"secretKey\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:company/apiApp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"apiApp"
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authType\": \"SecretKey\",\n  \"authConfig\": {\n    \"secretKey\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiApp"
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"createdBy\": {\n      \"type\": \"automation\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"updatedBy\": {\n      \"type\": \"user\",\n      \"data\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "apiCalls",
							"item": [
								{
									"name": "{apiCallId}",
									"item": [
										{
											"name": "Api Call Controller api Call Get",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiCalls/:apiCallId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiCalls",
														":apiCallId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "apiCallId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:company/apiCalls/:apiCallId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"apiCalls",
																":apiCallId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "apiCallId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"machineName\": \"<string>\",\n    \"type\": \"frontend\",\n    \"direction\": \"incoming\",\n    \"requestMethod\": \"patch\",\n    \"name\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"requestUrl\": \"<string>\",\n    \"requestParams\": {},\n    \"requestBody\": \"<string>\",\n    \"requestHeaders\": {},\n    \"requestComposeCode\": \"<string>\",\n    \"incomingRequestParseCode\": \"<string>\",\n    \"requestFields\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"responseParseCode\": \"<string>\",\n    \"responseFields\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Api Call Controller api Call Update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"machineName\": \"<string>\",\n  \"type\": \"frontend\",\n  \"direction\": \"incoming\",\n  \"requestMethod\": \"patch\",\n  \"name\": \"<string>\",\n  \"formId\": \"<uuid>\",\n  \"requestUrl\": \"<string>\",\n  \"requestParams\": {},\n  \"requestBody\": \"<string>\",\n  \"requestHeaders\": {},\n  \"requestComposeCode\": \"<string>\",\n  \"incomingRequestParseCode\": \"<string>\",\n  \"requestFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"responseParseCode\": \"<string>\",\n  \"responseFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiCalls/:apiCallId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiCalls",
														":apiCallId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "apiCallId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"machineName\": \"<string>\",\n  \"type\": \"frontend\",\n  \"direction\": \"incoming\",\n  \"requestMethod\": \"patch\",\n  \"name\": \"<string>\",\n  \"formId\": \"<uuid>\",\n  \"requestUrl\": \"<string>\",\n  \"requestParams\": {},\n  \"requestBody\": \"<string>\",\n  \"requestHeaders\": {},\n  \"requestComposeCode\": \"<string>\",\n  \"incomingRequestParseCode\": \"<string>\",\n  \"requestFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"responseParseCode\": \"<string>\",\n  \"responseFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:company/apiCalls/:apiCallId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"apiCalls",
																":apiCallId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "apiCallId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"machineName\": \"<string>\",\n    \"type\": \"frontend\",\n    \"direction\": \"incoming\",\n    \"requestMethod\": \"patch\",\n    \"name\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"requestUrl\": \"<string>\",\n    \"requestParams\": {},\n    \"requestBody\": \"<string>\",\n    \"requestHeaders\": {},\n    \"requestComposeCode\": \"<string>\",\n    \"incomingRequestParseCode\": \"<string>\",\n    \"requestFields\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"responseParseCode\": \"<string>\",\n    \"responseFields\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Api Call Controller delete Api Call",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiCalls/:apiCallId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiCalls",
														":apiCallId"
													],
													"variable": [
														{
															"key": "company",
															"value": "<string>",
															"description": "(Required) Company **UUID** or **URL Name**"
														},
														{
															"key": "apiCallId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/:company/apiCalls/:apiCallId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":company",
																"apiCalls",
																":apiCallId"
															],
															"variable": [
																{
																	"key": "company"
																},
																{
																	"key": "apiCallId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Api Call Controller api Calls Get",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:company/apiCalls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"apiCalls"
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiCalls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiCalls"
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										}
									]
								},
								{
									"name": "Api Call Controller api Call Create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"machineName\": \"<string>\",\n  \"type\": \"frontend\",\n  \"direction\": \"incoming\",\n  \"requestMethod\": \"patch\",\n  \"name\": \"<string>\",\n  \"formId\": \"<uuid>\",\n  \"requestUrl\": \"<string>\",\n  \"requestParams\": {},\n  \"requestBody\": \"<string>\",\n  \"requestHeaders\": {},\n  \"requestComposeCode\": \"<string>\",\n  \"incomingRequestParseCode\": \"<string>\",\n  \"requestFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"responseParseCode\": \"<string>\",\n  \"responseFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:company/apiCalls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":company",
												"apiCalls"
											],
											"variable": [
												{
													"key": "company",
													"value": "<string>",
													"description": "(Required) Company **UUID** or **URL Name**"
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"machineName\": \"<string>\",\n  \"type\": \"frontend\",\n  \"direction\": \"incoming\",\n  \"requestMethod\": \"patch\",\n  \"name\": \"<string>\",\n  \"formId\": \"<uuid>\",\n  \"requestUrl\": \"<string>\",\n  \"requestParams\": {},\n  \"requestBody\": \"<string>\",\n  \"requestHeaders\": {},\n  \"requestComposeCode\": \"<string>\",\n  \"incomingRequestParseCode\": \"<string>\",\n  \"requestFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"responseParseCode\": \"<string>\",\n  \"responseFields\": [\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"fieldType\": \"<string>\",\n      \"label\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:company/apiCalls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":company",
														"apiCalls"
													],
													"variable": [
														{
															"key": "company"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"machineName\": \"<string>\",\n    \"type\": \"frontend\",\n    \"direction\": \"incoming\",\n    \"requestMethod\": \"patch\",\n    \"name\": \"<string>\",\n    \"formId\": \"<uuid>\",\n    \"requestUrl\": \"<string>\",\n    \"requestParams\": {},\n    \"requestBody\": \"<string>\",\n    \"requestHeaders\": {},\n    \"requestComposeCode\": \"<string>\",\n    \"incomingRequestParseCode\": \"<string>\",\n    \"requestFields\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"responseParseCode\": \"<string>\",\n    \"responseFields\": [\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"fieldType\": \"<string>\",\n        \"label\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "me",
					"item": [
						{
							"name": "Check current user.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"me"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"belongCompanyId\": \"<uuid>\",\n    \"companyTz\": \"<string>\",\n    \"user\": {\n      \"id\": \"<uuid>\",\n      \"seq\": \"<number>\",\n      \"fields\": {\n        \"in_8\": {}\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"avatar\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"managerUserId\": \"<uuid>\",\n      \"profiles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"automatic\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"automatic\": \"<boolean>\"\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    \"profiles\": {\n      \"proident57\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"permissions\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissionsExtra\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"automatic\": \"<boolean>\",\n          \"staticKey\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"permissions\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissionsExtra\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"automatic\": \"<boolean>\",\n          \"staticKey\": \"<string>\"\n        }\n      ]\n    },\n    \"updatedAt\": \"<dateTime>\",\n    \"createdAt\": \"<dateTime>\",\n    \"clientTz\": \"<string>\",\n    \"language\": \"<string>\",\n    \"languageList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"permissionsPerCompany\": {\n      \"nisi_1\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occaecat_9b1\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"context\": {\n      \"portal\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"options\": {\n          \"labels\": {\n            \"tasks\": \"<string>\",\n            \"docs\": \"<string>\",\n            \"tasksPending\": \"<string>\",\n            \"tasksCompleted\": \"<string>\"\n          },\n          \"icons\": {\n            \"tasks\": {\n              \"id\": \"<string>\",\n              \"type\": \"<string>\",\n              \"size\": \"<number>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"docs\": {\n              \"id\": \"<string>\",\n              \"type\": \"<string>\",\n              \"size\": \"<number>\",\n              \"name\": \"<string>\",\n              \"url\": \"<string>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"style\": {},\n      \"formRoleViews\": {\n        \"ullamco_4\": \"<string>\",\n        \"minim__7\": \"<string>\"\n      }\n    }\n  },\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Login using username and password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"login"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"Token\": \"<string>\"\n  },\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "Destroy current session.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Destroy current session.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"logout"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}